{"version":3,"file":"generated.js","sources":["node_modules/browser-pack/_prelude.js","showy.js","src/showy.js","src/transitions.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"module","Showy","DefaultTransitions","window","TRANSITION_FORWARDS","TRANSITION_BACKWARDS","TRANSITION_RANDOM","TRANSITION_NONE_SHADER","HTMLMediaElement","Object","defineProperty","prototype","get","this","currentTime","paused","ended","readyState","config","_classCallCheck","defaultConfig","container","slides","autoplay","slideDuration","transitions","transition","name","duration","ease","priority","_","merge","document","querySelector","style","display","position","top","left","width","height","_slides","_currentSlideIndex","_transitionToIndex","_currentSlideRendered","_transitionProgress","_imageMap","_videoMap","_slideContentMap","_ready","_destroyed","_playing","_width","_height","_createCanvases","_resizeHandler","resize","bind","addEventListener","_lastFrameTime","requestAnimationFrame","_animate","index","direction","_transitionDirection","_autoPlayTimeout","clearTimeout","goToSlide","nextSlide","_this","removeEventListener","forEach","video","removeChild","slide","isFunction","object","type","_this2","classList","add","isNumber","setTimeout","frameTime","_fps","_drawSlides","error","console","canvas","createElement","_resizeCanvas","_currentCanvas","_createCanvas","_currentContext","getContext","_nextCanvas","_nextContext","_prevCanvas","_prevContext","_renderCanvas","_renderContext","pixelStorei","UNPACK_FLIP_Y_WEBGL","appendChild","_scale","devicePixelRatio","clientWidth","clientHeight","context","clearRect","currentSlideTransition","arguments","undefined","nextPrevSlideTransition","_currentSlideTransition","_nextPrevSlideTransition","glsl","sample","reset","currentSlide","prevSlide","transitionOptions","_rendered","_hasVideo","_transitionInProgress","_drawSlide","_fromTexture","dispose","_toTexture","createTexture","_getTransition","transitionNext","transitionPrev","_transitionOptions","_transition","createTransition","shader","progressIncrement","easedTransitionProgress","eases","render","uniforms","_playSlideContent","_slideRendered","_clearContext","_pauseSlideContent","_transitionEnded","content","filter","_loaded","background","fillStyle","fillRect","_drawSlideContent","_slideLoaded","indexOf","callback","_drawImage","_drawVideo","_this3","scale","_pixels","val","pixel","Math","abs","push","pixels","x","y","src","dst","scaleMode","srcRatio","dstRatio","newHeight","newWidth","_newHeight","_newWidth","roundProps","prop","round","size","tile","rows","columns","offsetWidth","offsetHeight","ceil","floor","row","column","totalTiles","image","tempCanvas","naturalWidth","naturalHeight","tempContext","drawImage","getImageData","data","imageUrl","_this4","Image","crossOrigin","onerror","destroy","onload","_this5","resizedImageKey","JSON","stringify","pica","resizeBuffer","_getImageData","toWidth","toHeight","quality","alpha","unsharpAmount","unsharpRadius","unsharpThreshold","buffer","_resizedImageData","ImageData","Uint8ClampedArray","_this6","_getImage","url","_position2Pixels","_ret","_getTile","updatedCoords","_updateCoords","_resizeImage","resizedImageData","_drawTiles","tileCoord","putImageData","v","_typeof","videoWidth","videoHeight","_this7","videoKey","sources","muted","source","_source","_playCount","play","_videoEnded","_this8","_getVideo","_ret2","_this9","_this10","currentSlideVideos","pause","none","crossfade","wipeUp","wipeDown","wipeRight","wipeLeft","circle","centerX","centerY","smoothness","grow","circleInOut","splitVertical","reflection","perspective","depth","slideUp","translateX","translateY","slideDown","slideLeft","slideRight"],"mappings":"AAAA,CAAA,QAAAA,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAK,GAAA,GAAAC,OAAA,uBAAAN,EAAA,IAAA,MAAAK,GAAAE,KAAA,mBAAAF,EAAA,GAAAG,GAAAX,EAAAG,IAAAS,WAAAb,GAAAI,GAAA,GAAAU,KAAAF,EAAAC,QAAA,SAAAd,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAa,EAAAA,EAAAC,QAAAd,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAS,QAAA,IAAA,GAAAL,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAa,OAAAX,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAa,GAAA,SAAAT,EAAAU,eCAA,IAAIC,GAAQX,EAAQ,eAARA,UACZW,GAAMC,mBAAqBZ,EAAQ,qBAARA,WAE3Ba,OAAOF,MAAQA,EAEfD,EAAOJ,QAAUK,0oBCQXG,EAAsB,WACtBC,EAAuB,YACvBC,EAAoB,SAEpBC,EAAA,2PAeFJ,QAAOK,kBACTC,OAAOC,eAAeF,iBAAiBG,UAAW,WAChDC,IAAK,WACH,SAAUC,KAAKC,YAAc,IAAMD,KAAKE,SAAWF,KAAKG,OAASH,KAAKI,WAAa,SAKnFhB,cACJ,QAAAA,GAAYiB,GAAQC,EAAAN,KAAAZ,EAClB,IAAMmB,IACJC,UAAW,OACXC,UACAC,UAAU,EACVC,cAAe,IACfC,YAAaxB,EAAMC,mBACnBwB,YACEC,KAAM,SACNC,SAAU,IACVC,KAAM,SACNC,SAAU,GAIdjB,MAAKK,OAASa,EAAEC,SAAUZ,EAAeF,GAGvCL,KAAKQ,UAD8B,gBAA1BR,MAAKK,OAAOG,UACJY,SAASC,cAAcrB,KAAKK,OAAOG,WAEnCR,KAAKK,OAAOG,UAG/BR,KAAKQ,UAAUc,MAAMC,QAAU,QAC/BvB,KAAKQ,UAAUc,MAAME,SAAW,WAChCxB,KAAKQ,UAAUc,MAAMG,IAAM,IAC3BzB,KAAKQ,UAAUc,MAAMI,KAAO,IAC5B1B,KAAKQ,UAAUc,MAAMK,MAAQ,OAC7B3B,KAAKQ,UAAUc,MAAMM,OAAS,OAE9B5B,KAAK6B,QAAU7B,KAAKK,OAAOI,OAC3BT,KAAK8B,mBAAqB9B,KAAK+B,mBAAqB,EACpD/B,KAAKgC,uBAAwB,EAC7BhC,KAAKiC,oBAAsB,EAC3BjC,KAAKkC,aACLlC,KAAKmC,aACLnC,KAAKoC,oBACLpC,KAAKqC,QAAS,EACdrC,KAAKsC,YAAa,EAClBtC,KAAKuC,SAAWvC,KAAKK,OAAOK,SAC5BV,KAAKwC,OAAS,EACdxC,KAAKyC,QAAU,EAEfzC,KAAK0C,kBAEL1C,KAAK2C,eAAiB3C,KAAK4C,OAAOC,KAAK7C,MACvCV,OAAOwD,iBAAiB,SAAU9C,KAAK2C,gBAEvC3C,KAAK+C,eAAiB,EACtBzD,OAAO0D,sBAAsBhD,KAAKiD,SAASJ,KAAK7C,mDAGxCkD,EAAOC,GACfnD,KAAK+B,mBAAqBmB,EAC1BlD,KAAKoD,qBAAuBD,EAE5BnD,KAAKgC,uBAAwB,EAEzBhC,KAAKqD,kBACPC,aAAatD,KAAKqD,sDAKpB,GAAIH,GAAA,MAIFA,GAFElD,KAAK+B,qBAAuB/B,KAAK8B,mBAAqB,GAAM9B,KAAK+B,qBAAuB/B,KAAK6B,QAAQ5C,OAAS,GAAiC,IAA5Be,KAAK8B,mBAElH9B,KAAK8B,mBAGL9B,KAAK8B,qBAAuB9B,KAAK6B,QAAQ5C,OAAS,EAAI,EAAIe,KAAK8B,mBAAqB,EAG9F9B,KAAKuD,UAAUL,EAAO3D,uCAItB,GAAI2D,GAAA,MAIFA,GAFElD,KAAK+B,qBAAuB/B,KAAK8B,mBAAqB,GAAkC,IAA5B9B,KAAK+B,oBAA4B/B,KAAK8B,qBAAuB9B,KAAK6B,QAAQ5C,OAAS,EAEzIe,KAAK8B,mBAGuB,IAA5B9B,KAAK8B,mBAA2B9B,KAAK6B,QAAQ5C,OAAS,EAAIe,KAAK8B,mBAAqB,EAG9F9B,KAAKuD,UAAUL,EAAO1D,kCAItBQ,KAAKuC,UAAW,EAEhBvC,KAAKwD,4CAILxD,KAAKuC,UAAW,EAEZvC,KAAKqD,kBACPC,aAAatD,KAAKqD,oDAIZ,GAAAI,GAAAzD,IACRA,MAAKuC,UAAW,EAEhBvC,KAAKsC,YAAa,EAElBhD,OAAOoE,oBAAoB,SAAU1D,KAAK2C,gBAE1CzB,EAAEyC,QAAQ3D,KAAKmC,UAAW,SAAAyB,GACxBH,EAAKjD,UAAUqD,YAAYD,GAC3BA,EAAQ,OAEV5D,KAAKmC,UAAY,uFAUjB,GAAM2B,GAAQ9D,KAAK6B,QAAQ7B,KAAK+B,mBAEhC,IAAI/B,KAAKuC,UACHuB,EAAM/C,UAAYG,EAAE6C,WAAWD,EAAM/C,UAAW,CAClD,GAAIiD,GAASF,EAAM/C,UAEC,WAAhBiD,EAAOC,MACTjE,KAAKwD,8FAUI,GAAAU,GAAAlE,IAGVA,MAAKqC,SAERrC,KAAKqC,QAAS,EACdrC,KAAKQ,UAAU2D,UAAUC,IAAI,gBAG/B,IAAMN,GAAQ9D,KAAK6B,QAAQ7B,KAAK+B,mBAEhC,IAAI/B,KAAKuC,SAAU,CACjB,GAAI5B,GAAgBX,KAAKK,OAAOM,aAEhC,IAAImD,EAAM/C,SAAU,CAClB,GAAIG,EAAE6C,WAAWD,EAAM/C,UAAW,CAChC,GAAIiD,GAASF,EAAM/C,UAEnB,IAAoB,UAAhBiD,EAAOC,KACT,OAIA/C,EAAEmD,SAASP,EAAM/C,YACnBJ,EAAgBmD,EAAM/C,UAI1Bf,KAAKqD,iBAAmBiB,WAAW,WACjCJ,EAAKV,aACJ7C,qCAIE4D,GACP,IAAIvE,KAAKsC,WAAT,CAIAtC,KAAKwE,KAAO,KAAQD,EAAYvE,KAAK+C,eAErC,KACE/C,KAAKyE,cAELnF,OAAO0D,sBAAsBhD,KAAKiD,SAASJ,KAAK7C,OAEhD,MAAO0E,GACPC,QAAQD,MAAMA,GAGhB1E,KAAK+C,eAAiBwB,2CAItB,GAAMK,GAASxD,SAASyD,cAAc,SAKtC,OAJAD,GAAOtD,MAAME,SAAW,WACxBoD,EAAOtD,MAAMK,MAAQ,OACrBiD,EAAOtD,MAAMM,OAAS,OACtB5B,KAAK8E,cAAcF,GACZA,4CAIP5E,KAAK+E,eAAiB/E,KAAKgF,gBAC3BhF,KAAKiF,gBAAkBjF,KAAK+E,eAAeG,WAAW,MAEtDlF,KAAKmF,YAAcnF,KAAKgF,gBACxBhF,KAAKoF,aAAepF,KAAKmF,YAAYD,WAAW,MAEhDlF,KAAKqF,YAAcrF,KAAKgF,gBACxBhF,KAAKsF,aAAetF,KAAKqF,YAAYH,WAAW,MAEhDlF,KAAKuF,cAAgBvF,KAAKgF,gBAC1BhF,KAAKwF,eAAiBxF,KAAKuF,cAAcL,WAAW,UAAYlF,KAAKuF,cAAcL,WAAW,sBAC9FlF,KAAKwF,eAAeC,YAAYzF,KAAKwF,eAAeE,qBAAqB,GAEzE1F,KAAKQ,UAAUmF,YAAY3F,KAAKuF,qDAGpBX,GACZ5E,KAAK4F,OAAStG,OAAOuG,iBACrB7F,KAAKwC,OAASxC,KAAKQ,UAAUsF,YAAc9F,KAAK4F,OAChD5F,KAAKyC,QAAUzC,KAAKQ,UAAUuF,aAAe/F,KAAK4F,OAClDhB,EAAOjD,MAAQ3B,KAAKwC,OACpBoC,EAAOhD,OAAS5B,KAAKyC,yCAKrBzC,KAAKoC,oBAELpC,KAAK8E,cAAc9E,KAAK+E,gBACxB/E,KAAK8E,cAAc9E,KAAKmF,aACxBnF,KAAK8E,cAAc9E,KAAKqF,aACxBrF,KAAK8E,cAAc9E,KAAKuF,eAExBvF,KAAKyE,aAAY,yCAGLuB,GACZA,EAAQC,UAAU,EAAG,EAAGjG,KAAKwC,OAAQxC,KAAKyC,yDAI1C,MAAOzC,MAAKiC,oBAAsB,GAAKjC,KAAKiC,oBAAsB,2CAGM,GAA3DiE,GAA2DC,UAAAlH,QAAA,GAAAmH,SAAAD,UAAA,MAAAA,UAAA,GAA9BE,EAA8BF,UAAAlH,QAAA,GAAAmH,SAAAD,UAAA,MAAAA,UAAA,GAClEG,EAA0BpF,EAAEC,SAAUnB,KAAKK,OAAOQ,WAAYqF,OAC9DK,EAA2BrF,EAAEC,SAAUnB,KAAKK,OAAOQ,WAAYwF,MAEnEC,GAAwBE,KADtBF,EAAwBxF,OAASrB,EACJyB,EAAEuF,OAAOzG,KAAKK,OAAOO,aAErBZ,KAAKK,OAAOO,YAAY0F,EAAwBxF,MAG/EyF,EAAyBC,KADvBD,EAAyBzF,OAASrB,EACJyB,EAAEuF,OAAOzG,KAAKK,OAAOO,aAErBZ,KAAKK,OAAOO,YAAY2F,EAAyBzF,KAEnF,IAAMD,GAAayF,EAAwBrF,UAAYsF,EAAyBtF,SAAWqF,EAA0BC,CACrH,OAAO1F,uCAGG6F,GACV,GAAMC,GAAe3G,KAAK6B,QAAQ7B,KAAK8B,oBACjC0B,EAAYxD,KAAK6B,QAAQ7B,KAAK8B,qBAAuB9B,KAAK6B,QAAQ5C,OAAS,EAAI,EAAIe,KAAK8B,mBAAqB,GAC7G8E,EAAY5G,KAAK6B,QAAoC,IAA5B7B,KAAK8B,mBAA2B9B,KAAK6B,QAAQ5C,OAAS,EAAIe,KAAK8B,mBAAqB,GAE/G+E,EAAA,MASJ,IANIH,IACFC,EAAaG,WAAY,GAKtBH,EAAaI,YAChBJ,EAAaG,WACZ9G,KAAKgH,yBACNhH,KAAK8B,qBAAuB9B,KAAK+B,mBAHnC,CAsDA,GA/CA/B,KAAKiH,WAAWjH,KAAKiF,gBAAiB0B,GACtC3G,KAAKiH,WAAWjH,KAAKoF,aAAc5B,GACnCxD,KAAKiH,WAAWjH,KAAKsF,aAAcsB,GAG/B5G,KAAKkH,cACPlH,KAAKkH,aAAaC,UAEhBnH,KAAKoH,YACPpH,KAAKoH,WAAWD,UAIdnH,KAAK+B,qBAAuB/B,KAAK8B,oBAAsB9B,KAAKgH,0BAEzDhH,KAAK+B,qBAAuB/B,KAAK8B,oBAAsB9B,KAAKoD,uBAAyB7D,GACvFS,KAAK+B,qBAAuB/B,KAAK8B,oBAAsB9B,KAAKoD,uBAAyB5D,KACtFQ,KAAKkH,aAAeG,cAAcrH,KAAKwF,eAAgBxF,KAAK+E,gBAC5D/E,KAAKoH,WAAaC,cAAcrH,KAAKwF,eAAgBxF,KAAKmF,aAC1D0B,EAAoB7G,KAAKsH,eAAeX,EAAaY,eAAgB/D,EAAUgE,kBAG5ExH,KAAK+B,qBAAuB/B,KAAK8B,oBAAsB9B,KAAKoD,uBAAyB5D,GACvFQ,KAAK+B,qBAAuB/B,KAAK8B,oBAAsB9B,KAAKoD,uBAAyB7D,KACtFS,KAAKkH,aAAeG,cAAcrH,KAAKwF,eAAgBxF,KAAKqF,aAC5DrF,KAAKoH,WAAaC,cAAcrH,KAAKwF,eAAgBxF,KAAK+E,gBAC1D8B,EAAoB7G,KAAKsH,eAAeX,EAAaa,eAAgBZ,EAAUW,mBAKjFvH,KAAKkH,aAAeG,cAAcrH,KAAKwF,eAAgBxF,KAAK+E,gBAC5D/E,KAAKoH,WAAapH,KAAKkH,eAGrBL,GAAsB7G,KAAKgH,yBAC3BhH,KAAKyH,oBAAsBzH,KAAKyH,mBAAmB3G,OAAS+F,EAAkB/F,MAAQd,KAAKyH,mBAAmB3G,OAASrB,IAEzHO,KAAKyH,mBAAqBZ,EAEtB7G,KAAK0H,cAEP1H,KAAK0H,YAAYP,UACjBnH,KAAK0H,YAAc,OAInB1H,KAAKyH,mBAAoB,CAK3B,GAJKzH,KAAK0H,cACR1H,KAAK0H,YAAcC,iBAAiB3H,KAAKwF,eAAgBxF,KAAKyH,mBAAmBjB,KAAKoB,SAGpF5H,KAAK+B,qBAAuB/B,KAAK8B,oBAAsB9B,KAAKgH,wBAAyB,CAEvF,GAAMa,GAAoB,GAAK7H,KAAKyH,mBAAmB1G,QAEnDf,MAAKoD,uBAAyB7D,IAChCS,KAAKiC,oBAAsBjC,KAAKgH,wBAA0BhH,KAAKiC,oBAAsB4F,EAAoBA,GAEvG7H,KAAKoD,uBAAyB5D,IAChCQ,KAAKiC,oBAAsBjC,KAAKgH,wBAA0BhH,KAAKiC,oBAAsB4F,EAAoB,EAAIA,GAK7G7H,KAAKiC,oBAAsB,IAC7BjC,KAAKiC,oBAAsB,GAEzBjC,KAAKiC,oBAAsB,IAC7BjC,KAAKiC,oBAAsB,EAG7B,IAAM6F,GAA0BC,MAAM/H,KAAKyH,mBAAmBzG,MAAMhB,KAAKiC,oBAEzEjC,MAAK0H,YAAYM,OAAOF,EAAyB9H,KAAKkH,aAAclH,KAAKoH,WAAYpH,KAAKyH,mBAAmBjB,KAAKyB,cAI7GjI,MAAK0H,cACR1H,KAAK0H,YAAcC,iBAAiB3H,KAAKwF,eAAgB9F,IAG3DM,KAAK0H,YAAYM,OAAO,EAAGhI,KAAKkH,aAAclH,KAAKoH,WAIjDT,GAAatE,SACfsE,EAAaG,WAAY,EAEpB9G,KAAKgC,wBACRhC,KAAKgC,uBAAwB,EAE7BhC,KAAKkI,kBAAkBlI,KAAK+B,oBAE5B/B,KAAKmI,mBAKLnI,KAAK+B,qBAAuB/B,KAAK8B,oBAAuB9B,KAAKgH,0BAC/DhH,KAAK8B,mBAAqB9B,KAAK+B,mBAE/B/B,KAAKoI,cAAcpI,KAAKiF,iBACxBjF,KAAKoI,cAAcpI,KAAKoF,cACxBpF,KAAKoI,cAAcpI,KAAKsF,cAExBtF,KAAKqI,qBAELrI,KAAKsI,wDAIEtC,EAASlC,GAClBA,EAAMiD,UAAYjD,EAAMyE,QAAQC,OAAO,SAAAxE,GAAA,MAA0B,UAAhBA,EAAOC,OAAkBhF,OAAS,EACnF6E,EAAMgD,WAAY,EAClBhD,EAAMzB,QAAS,EACVyB,EAAM2E,UACT3E,EAAM2E,SAAU,GAGd3E,EAAM4E,aACR1C,EAAQ2C,UAAY7E,EAAM4E,WAC1B1C,EAAQ4C,SAAS,EAAG,EAAG5I,KAAKwC,OAAQxC,KAAKyC,UAGvCqB,EAAMyE,QAAQtJ,QAChBe,KAAK6I,kBAAkB7C,EAASlC,EAAO,6CAIzBkC,EAASlC,EAAOZ,GAChC,GAAMc,GAASF,EAAMyE,QAAQrF,EAE7B,KAAKc,EAOH,MANAF,GAAMzB,QAAS,OAEVyB,EAAM2E,UACT3E,EAAM2E,SAAU,EAChBzI,KAAK8I,aAAahF,EAAO9D,KAAK6B,QAAQkH,QAAQjF,KAKlD,IAAMkF,GAAWhJ,KAAK6I,kBAAkBhG,KAAK7C,KAAMgG,EAASlC,EAAOZ,EAAQ,EAE3E,QAAQc,EAAOC,MACb,IAAK,QACHjE,KAAKiJ,WAAWjD,EAAShC,EAAQgF,EACjC,MACF,KAAK,QACHhJ,KAAKkJ,WAAWlD,EAAShC,EAAQgF,EACjC,MACF,SACE,KAAM,IAAIpK,OAAM,kEAIL4C,GAAqB,GAAA2H,GAAAnJ,KAAXoJ,EAAWjD,UAAAlH,QAAA,GAAAmH,SAAAD,UAAA,GAAH,EAAGA,UAAA,GAC9BkD,IAEN7H,GAASmC,QAAQ,SAAC2F,EAAKpG,GACrB,GAAIqG,GAAA,OAEAtK,GAAUkK,EAAK3G,OAAQ2G,EAAK1G,QAAS0G,EAAK3G,OAAQ2G,EAAK1G,SAASS,EAEpEjE,IAAUmK,EAING,EAFAD,GAAO,GAAY,GAAPA,EACF,EAARpG,EACMoG,EAAMrK,EAELqK,EAAMrK,EAAUoK,EAAQnG,EAAQ,GAG/B,EAARA,EACMoG,EAEArK,EAASoK,EAAQnG,EAAQ,GAAKsG,KAAKC,IAAIH,GAInDD,EAAQK,KAAKH,IAGf,IAAMI,IACJC,EAAGP,EAAQ,GAAKD,EAChBS,EAAGR,EAAQ,GAAKD,EAChBzH,MAAO0H,EAAQ,GAAKD,EACpBxH,OAAQyH,EAAQ,GAAKD,EAGvB,OAAOO,yCAGKG,EAAKC,EAAKC,GACtB,GAAMC,GAAWH,EAAInI,MAAQmI,EAAIlI,OAC3BsI,EAAWH,EAAIpI,MAAQoI,EAAInI,MAEjC,IAAIoI,GAA2B,SAAdA,EAAsB,CACrC,GAAeE,EAAXD,EAAqB,CACvB,GAAME,GAAYJ,EAAInI,QAAUkI,EAAInI,MAAQoI,EAAIpI,MAChDmI,GAAID,EAAIC,EAAID,EAAgC,IAA1BC,EAAIlI,OAASuI,GAC/BL,EAAIlI,OAASuI,EAEf,GAAIF,EAAWC,EAAU,CACvB,GAAME,GAAWL,EAAIpI,OAASmI,EAAIlI,OAASmI,EAAInI,OAC/CkI,GAAIF,EAAIE,EAAIF,EAA8B,IAAxBE,EAAInI,MAAQyI,GAC9BN,EAAInI,MAAQyI,OAET,CACL,GAAIH,EAAWC,EAAU,CACvB,GAAMG,GAAYN,EAAIpI,OAASmI,EAAIlI,OAASkI,EAAInI,MAChDoI,GAAIF,EAAIE,EAAIF,EAAgC,IAA1BE,EAAInI,OAASyI,GAC/BN,EAAInI,OAASyI,EAEf,GAAeH,EAAXD,EAAqB,CACvB,GAAMK,GAAWP,EAAInI,OAASqI,CAC9BF,GAAIH,EAAIG,EAAIH,EAA8B,IAAxBG,EAAIpI,MAAQ2I,GAC9BP,EAAIpI,MAAQ2I,GAKhB,GAAMC,IAAc,IAAK,IAAK,QAAS,SAOvC,OALAA,GAAW5G,QAAQ,SAAA6G,GACjBV,EAAIU,GAAQhB,KAAKiB,MAAMX,EAAIU,IAC3BT,EAAIS,GAAQhB,KAAKiB,MAAMV,EAAIS,OAI3BV,IAAAA,EACAC,IAAAA,oCAIKA,EAAKW,GACZ,OACEd,EAAGG,EAAIH,EACPC,EAAGE,EAAIF,EACPlI,MAAO+I,EAAK,IAAM,EAAIX,EAAIpI,MAAQ+I,EAAK,GAAKA,EAAK,GACjD9I,OAAQ8I,EAAK,IAAM,EAAIX,EAAInI,OAAS8I,EAAK,GAAKA,EAAK,uCAI5CX,EAAKY,EAAMX,EAAWhB,GAC/B,GAAI4B,GAAA,OACAC,EAAA,OAEAC,EAAc,EACdC,EAAe,CAEff,IAA2B,SAAdA,GACfY,EAAOpB,KAAKwB,KAAKjB,EAAInI,OAAS+I,EAAK/I,QACnCiJ,EAAUrB,KAAKwB,KAAKjB,EAAIpI,MAAQgJ,EAAKhJ,OAErCmJ,EAAqD,IAArCH,EAAKhJ,MAAQkJ,EAAWd,EAAIpI,OAC5CoJ,EAAqD,IAApCJ,EAAK/I,OAASgJ,EAAQb,EAAInI,UAG3CgJ,EAAOpB,KAAKyB,MAAMlB,EAAInI,OAAS+I,EAAK/I,QACpCiJ,EAAUrB,KAAKyB,MAAMlB,EAAIpI,MAAQgJ,EAAKhJ,OAQxC,KAAK,GALDuJ,GAAM,EACNC,EAAS,EAEPC,EAAaR,EAAOC,EAEjBnM,EAAI,EAAO0M,EAAJ1M,EAAgBA,IAC9BsK,GACEY,EAAIe,EAAKf,EAAKuB,EAASR,EAAKhJ,MAAUmJ,EACtCjB,EAAIc,EAAKd,EAAKqB,EAAMP,EAAK/I,OAAWmJ,IAGlCI,IAAWN,EAAU,GACvBK,IAGFC,EAAkBN,EAAU,EAAnBM,EAAuBA,EAAS,EAAI,wCAInCE,EAAOzB,EAAGC,EAAGlI,EAAOC,GAChC,GAAM0J,GAAalK,SAASyD,cAAc,SAC1CyG,GAAW3J,MAAQ0J,EAAME,aACzBD,EAAW1J,OAASyJ,EAAMG,aAC1B,IAAMC,GAAcH,EAAWpG,WAAW,KAE1C,OADAuG,GAAYC,UAAUL,EAAO,EAAG,EAAGA,EAAME,aAAcF,EAAMG,eACtDC,EAAYE,aAAa/B,EAAGC,EAAGlI,EAAOC,GAAQgK,uCAG7CC,EAAU7C,GAAU,GAAA8C,GAAA9L,IAC5B,IAAIA,KAAKkC,UAAU2J,GAEjB,WADA7C,GAAShJ,KAAKkC,UAAU2J,GAI1B,IAAMR,GAAQ,GAAIU,MAClBV,GAAMW,YAAc,YACpBX,EAAMvB,IAAM+B,EACZR,EAAMY,QAAU,WAGd,KAFAH,GAAKI,UAEC,GAAItN,OAAM,uBAAwBiN,IAE1CR,EAAMc,OAAS,WACbL,EAAK5J,UAAU2J,GAAYR,EAC3BrC,EAASqC,yCAIAA,EAAOvB,EAAKC,EAAKf,GAAU,GAAAoD,GAAApM,KAChCqM,EAAkBC,KAAKC,WAC3BzC,IAAKuB,EAAMvB,IACXC,IAAAA,GAGF,OAAI/J,MAAKoC,iBAAiBiK,OACxBrD,GAAShJ,KAAKoC,iBAAiBiK,QAIjCG,MAAKC,cACH3C,IAAK9J,KAAK0M,cAAcrB,EAAOvB,EAAIF,EAAGE,EAAID,EAAGC,EAAInI,MAAOmI,EAAIlI,QAC5DD,MAAOmI,EAAInI,MACXC,OAAQkI,EAAIlI,OACZ+K,QAAS5C,EAAIpI,MACbiL,SAAU7C,EAAInI,OACdiL,QAAS,EACTC,OAAO,EACPC,cAAe,EACfC,cAAe,GACfC,iBAAkB,GACjB,SAACvI,EAAOwI,GACT,MAAIxI,OACFC,SAAQD,MAAMA,GAIZwI,EAAOjO,QACTmN,EAAKe,kBAAoB,GAAIC,WAAU,GAAIC,mBAAkBH,GAASnD,EAAIpI,MAAOoI,EAAInI,QAErFwK,EAAKhK,iBAAiBiK,GAAmBD,EAAKe,sBAE9CnE,GAASoD,EAAKhK,iBAAiBiK,SAKjC1H,SAAQD,MAAM,GAAI9F,OAAM,iBAAkByM,EAAMvB,IAAKA,EAAKC,wCAInD/D,EAAShC,EAAQgF,GAAU,GAAAsE,GAAAtN,IACpCA,MAAKuN,UAAUvJ,EAAOwJ,IAAK,SAAAnC,GACzB,GAAIvB,IACFF,EAAG,EACHC,EAAG,EACHlI,MAAO0J,EAAME,aACb3J,OAAQyJ,EAAMG,eAGZzB,EAAMuD,EAAKG,iBAAiBzJ,EAAOxC,SAAU8L,EAAK1H,OAEtD,IAAI5B,EAAO2G,KAAM,CAAA,GAAA+C,GAAA,WACf,GAAI/C,GAAO2C,EAAKK,SAAS5D,EAAK/F,EAAO2G,KAAKD,MAEpCkD,EAAgBN,EAAKO,cAAc/D,EAAKa,EAAM3G,EAAO2G,KAAKX,UAWhE,OATAsD,GAAKQ,aAAazC,EAAOuC,EAAc9D,IAAK8D,EAAc7D,IAAK,SAAAgE,GAE7DT,EAAKU,WAAWjE,EAAK6D,EAAc7D,IAAK/F,EAAOgG,UAAW,SAAAiE,GACxDjI,EAAQkI,aAAaH,EAAkBE,EAAUrE,EAAGqE,EAAUpE,KAGhEb,OAGFmF,EAAA,UAde,IAAA,YAAA,mBAAAT,GAAA,YAAAU,EAAAV,IAAA,MAAAA,GAAAS,EAiBjB,GAAMP,GAAgBN,EAAKO,cAAc/D,EAAKC,EAAK/F,EAAOgG,UAE1DF,GAAM8D,EAAc9D,IACpBC,EAAM6D,EAAc7D,IAEpBuD,EAAKQ,aAAazC,EAAOvB,EAAKC,EAAK,SAAAgE,GACjC/H,EAAQkI,aAAaH,EAAkBhE,EAAIH,EAAGG,EAAIF,GAElDb,8CAKQpF,GACZ,GAAM0H,GAAalK,SAASyD,cAAc,SAC1CyG,GAAW3J,MAAQiC,EAAMyK,WACzB/C,EAAW1J,OAASgC,EAAM0K,WAC1B,IAAM7C,GAAcH,EAAWpG,WAAW,KAE1C,OADAuG,GAAYC,UAAU9H,EAAO,EAAG,EAAGA,EAAMyK,WAAYzK,EAAM0K,aACpD7C,EAAYiB,cAAc,EAAG,EAAG9I,EAAMyK,WAAYzK,EAAM0K,aAAa1C,uCAGpE5H,GAA6B,GAAAuK,GAAAvO,KAArBgJ,EAAqB7C,UAAAlH,QAAA,GAAAmH,SAAAD,UAAA,GAAV,aAAUA,UAAA,GAC/BqI,EAAWlC,KAAKC,UAAUvI,EAAOyK,QAEvC,IAAIzO,KAAKmC,UAAUqM,GAGjB,MAFAxF,GAAShJ,KAAKmC,UAAUqM,IAEjBxO,KAAKmC,UAAUqM,EAGxB,IAAM5K,GAAQxC,SAASyD,cAAc,QA8BrC,OA7BAjB,GAAMtC,MAAMC,QAAU,OACtBqC,EAAMoI,YAAc,YACpBpI,EAAM8K,OAAQ,EACd1O,KAAKQ,UAAUmF,YAAY/B,GAE3BI,EAAOyK,QAAQ9K,QAAQ,SAAAgL,GACrB,GAAMC,GAAUxN,SAASyD,cAAc,SACvC+J,GAAQ9E,IAAM6E,EAAOnB,IACrBoB,EAAQ3K,KAAO0K,EAAO1K,KACtB2K,EAAQ5C,YAAc,YACtBpI,EAAM+B,YAAYiJ,KAGpB5O,KAAKmC,UAAUqM,GAAY5K,EAE3BA,EAAMd,iBAAiB,iBAAkB,WACvCkG,EAASpF,KAGXA,EAAMiL,WAAa,EAEnBjL,EAAMd,iBAAiB,QAAS,WAC9Bc,EAAMkL,OAENlL,EAAMiL,YAAc,EAEpBN,EAAKQ,YAAYnL,EAAOI,KAGnBJ,qCAGEoC,EAAShC,EAAQgF,GAAU,GAAAgG,GAAAhP,IACpCA,MAAKiP,UAAUjL,EAAQ,SAAAJ,GACrB,GAAyB,IAArBA,EAAMyK,YAA0C,IAAtBzK,EAAM0K,YAApC,CAIA,GAAIxE,IACFF,EAAG,EACHC,EAAG,EACHlI,MAAOiC,EAAMyK,WACbzM,OAAQgC,EAAM0K,aAGZvE,EAAMiF,EAAKvB,iBAAiBzJ,EAAOxC,SAAUwN,EAAKpJ,OAEtD,IAAI5B,EAAO2G,KAAM,CAAA,GAAAuE,GAAA,WACf,GAAIvE,GAAOqE,EAAKrB,SAAS5D,EAAK/F,EAAO2G,KAAKD,MAEpCkD,EAAgBoB,EAAKnB,cAAc/D,EAAKa,EAAM3G,EAAO2G,KAAKX,UAQhE,OANAgF,GAAKhB,WAAWjE,EAAK6D,EAAc7D,IAAK/F,EAAOgG,UAAW,SAAAiE,GACxDjI,EAAQ0F,UAAU9H,EAAOkG,EAAIF,EAAGE,EAAID,EAAGC,EAAInI,MAAOmI,EAAIlI,OAAQqM,EAAUrE,EAAGqE,EAAUpE,EAAGc,EAAKhJ,MAAOgJ,EAAK/I,UAG3GoH,KAEAmF,EAAA,UAXe,IAAA,YAAA,mBAAAe,GAAA,YAAAd,EAAAc,IAAA,MAAAA,GAAAf,EAcjB,GAAMP,GAAgBoB,EAAKnB,cAAc/D,EAAKC,EAAK/F,EAAOgG,UAE1DF,GAAM8D,EAAc9D,IACpBC,EAAM6D,EAAc7D,IAEpB/D,EAAQ0F,UAAU9H,EAAOkG,EAAIF,EAAGE,EAAID,EAAGC,EAAInI,MAAOmI,EAAIlI,OAAQmI,EAAIH,EAAGG,EAAIF,EAAGE,EAAIpI,MAAOoI,EAAInI,QAE3FoH,iDAIc9F,GAAO,GAAAiM,GAAAnP,IACvBA,MAAK6B,QAAQqB,GAAOqF,QAAQ5E,QAAQ,SAAAK,GACd,UAAhBA,EAAOC,MACTkL,EAAKF,UAAUjL,EAAQ,SAAAJ,GACrBA,EAAMiL,WAAa,EACnBjL,EAAM3D,YAAc,EACpB2D,EAAMkL,wDAMO,GAAAM,GAAApP,KACbqP,IAENrP,MAAK6B,QAAQ7B,KAAK8B,oBAAoByG,QAAQ5E,QAAQ,SAAAK,GAChC,UAAhBA,EAAOC,MACToL,EAAmB3F,KAAK0F,EAAKH,UAAUjL,MAI3ChE,KAAK6B,QAAQ8B,QAAQ,SAACG,EAAOZ,GACvBA,IAAUkM,EAAKtN,oBAInBgC,EAAMyE,QAAQ5E,QAAQ,SAAAK,GACA,UAAhBA,EAAOC,MACTmL,EAAKH,UAAUjL,EAAQ,SAAAJ,GACqB,KAAtCyL,EAAmBtG,QAAQnF,KAC7BA,EAAMiL,WAAa,EACnBjL,EAAM3D,YAAc,EACpB2D,EAAM0L,qCASLlQ,uFCx1Bf,IAAMwB,IACJ2O,MACE3H,OAAA,wSAaAK,aAEFuH,WACE5H,OAAA,2UAaAK,aAEFwH,QACE7H,OAAA,sYAeAK,aAEFyH,UACE9H,OAAA,sYAeAK,aAEF0H,WACE/H,OAAA,sYAeAK,aAEF2H,UACEhI,OAAA,sYAeAK,aAEF4H,QACEjI,OAAA,80BAyBAK,UACE6H,QAAS,GACTC,QAAS,GACTC,WAAY,EACZC,MAAM,IAGVC,aACEtI,OAAA,+0BA+BAK,aAEFkI,eACEvI,OAAA,0uDAgEAK,UACEmI,WAAY,EACZC,YAAa,EACbC,MAAO,IAGXC,SACE3I,OAAA,w7CA6CAK,UACEuI,WAAY,EACZC,WAAY,IAGhBC,WACE9I,OAAA,w7CA6CAK,UACEuI,WAAY,EACZC,WAAY,KAGhBE,WACE/I,OAAA,w7CA6CAK,UACEuI,WAAY,EACZC,WAAY,IAGhBG,YACEhJ,OAAA,w7CA6CAK,UACEuI,WAAY,GACZC,WAAY,kBAKH7P;;;AFjcf,IAAI,QAAQ,QAAQ,aAAR,EAAuB,OAAnC;AACA,MAAM,kBAAN,GAA2B,QAAQ,mBAAR,EAA6B,OAAxD;;AAEA,OAAO,KAAP,GAAe,KAAf;;AAEA,OAAO,OAAP,GAAiB,KAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQA,IAAM,sBAAsB,UAA5B;AACA,IAAM,uBAAuB,WAA7B;AACA,IAAM,oBAAoB,QAA1B;;AAEA,IAAM,oRAAN;;;AAeA,IAAI,OAAO,gBAAX,EAA6B;AAC3B,SAAO,cAAP,CAAsB,iBAAiB,SAAvC,EAAkD,SAAlD,EAA6D;AAC3D,SAAK,eAAY;AACf,aAAO,CAAC,EAAE,KAAK,WAAL,GAAmB,CAAnB,IAAwB,CAAC,KAAK,MAA9B,IAAwC,CAAC,KAAK,KAA9C,IAAuD,KAAK,UAAL,GAAkB,CAA3E,CAAR;AACD;AAH0D,GAA7D;AAKD;;IAEK,K;AACJ,iBAAY,MAAZ,EAAoB;AAAA;;AAClB,QAAM,gBAAgB;AACpB,iBAAW,MADS;AAEpB,cAAQ,EAFY;AAGpB,gBAAU,KAHU;AAIpB,qBAAe,IAJK;AAKpB,mBAAa,MAAM,kBALC;AAMpB,kBAAY;AACV,cAAM,QADI;AAEV,kBAAU,IAFA;AAGV,cAAM,QAHI;AAIV,kBAAU;AAJA;AANQ,KAAtB;;AAcA,SAAK,MAAL,GAAc,EAAE,KAAF,CAAQ,EAAR,EAAY,aAAZ,EAA2B,MAA3B,CAAd;;AAEA,QAAI,OAAO,KAAK,MAAL,CAAY,SAAnB,KAAiC,QAArC,EAA+C;AAC7C,WAAK,SAAL,GAAiB,SAAS,aAAT,CAAuB,KAAK,MAAL,CAAY,SAAnC,CAAjB;AACD,KAFD,MAEO;AACL,WAAK,SAAL,GAAiB,KAAK,MAAL,CAAY,SAA7B;AACD;;AAED,SAAK,SAAL,CAAe,KAAf,CAAqB,OAArB,GAA+B,OAA/B;AACA,SAAK,SAAL,CAAe,KAAf,CAAqB,QAArB,GAAgC,UAAhC;AACA,SAAK,SAAL,CAAe,KAAf,CAAqB,GAArB,GAA2B,GAA3B;AACA,SAAK,SAAL,CAAe,KAAf,CAAqB,IAArB,GAA4B,GAA5B;AACA,SAAK,SAAL,CAAe,KAAf,CAAqB,KAArB,GAA6B,MAA7B;AACA,SAAK,SAAL,CAAe,KAAf,CAAqB,MAArB,GAA8B,MAA9B;;AAEA,SAAK,OAAL,GAAe,KAAK,MAAL,CAAY,MAA3B;AACA,SAAK,kBAAL,GAA0B,KAAK,kBAAL,GAA0B,CAApD;AACA,SAAK,qBAAL,GAA6B,KAA7B;AACA,SAAK,mBAAL,GAA2B,CAA3B;AACA,SAAK,SAAL,GAAiB,EAAjB;AACA,SAAK,SAAL,GAAiB,EAAjB;AACA,SAAK,gBAAL,GAAwB,EAAxB;AACA,SAAK,MAAL,GAAc,KAAd;AACA,SAAK,UAAL,GAAkB,KAAlB;AACA,SAAK,QAAL,GAAgB,KAAK,MAAL,CAAY,QAA5B;AACA,SAAK,MAAL,GAAc,CAAd;AACA,SAAK,OAAL,GAAe,CAAf;;AAEA,SAAK,eAAL;;AAEA,SAAK,cAAL,GAAsB,KAAK,MAAL,CAAY,IAAZ,CAAiB,IAAjB,CAAtB;AACA,WAAO,gBAAP,CAAwB,QAAxB,EAAkC,KAAK,cAAvC;;AAEA,SAAK,cAAL,GAAsB,CAAtB;AACA,WAAO,qBAAP,CAA6B,KAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB,CAA7B;AACD;;;;8BAES,K,EAAO,S,EAAW;AAC1B,WAAK,kBAAL,GAA0B,KAA1B;AACA,WAAK,oBAAL,GAA4B,SAA5B;;AAEA,WAAK,qBAAL,GAA6B,KAA7B;;AAEA,UAAI,KAAK,gBAAT,EAA2B;AACzB,qBAAa,KAAK,gBAAlB;AACD;AACF;;;gCAEW;AACV,UAAI,cAAJ;;AAEA,UAAI,KAAK,kBAAL,KAA4B,KAAK,kBAAL,GAA0B,CAAtD,IAA4D,KAAK,kBAAL,KAA4B,KAAK,OAAL,CAAa,MAAb,GAAsB,CAAlD,IAAuD,KAAK,kBAAL,KAA4B,CAAnJ,EAAuJ;;AAErJ,gBAAQ,KAAK,kBAAb;AAED,OAJD,MAIO;AACL,gBAAQ,KAAK,kBAAL,KAA4B,KAAK,OAAL,CAAa,MAAb,GAAsB,CAAlD,GAAsD,CAAtD,GAA0D,KAAK,kBAAL,GAA0B,CAA5F;AACD;;AAED,WAAK,SAAL,CAAe,KAAf,EAAsB,mBAAtB;AACD;;;gCAEW;AACV,UAAI,cAAJ;;AAEA,UAAI,KAAK,kBAAL,KAA4B,KAAK,kBAAL,GAA0B,CAAtD,IAA4D,KAAK,kBAAL,KAA4B,CAA5B,IAAiC,KAAK,kBAAL,KAA4B,KAAK,OAAL,CAAa,MAAb,GAAsB,CAAnJ,EAAuJ;;AAErJ,gBAAQ,KAAK,kBAAb;AAED,OAJD,MAIO;AACL,gBAAQ,KAAK,kBAAL,KAA4B,CAA5B,GAAgC,KAAK,OAAL,CAAa,MAAb,GAAsB,CAAtD,GAA0D,KAAK,kBAAL,GAA0B,CAA5F;AACD;;AAED,WAAK,SAAL,CAAe,KAAf,EAAsB,oBAAtB;AACD;;;2BAEM;AACL,WAAK,QAAL,GAAgB,IAAhB;;AAEA,WAAK,SAAL;AACD;;;4BAEO;AACN,WAAK,QAAL,GAAgB,KAAhB;;AAEA,UAAI,KAAK,gBAAT,EAA2B;AACzB,qBAAa,KAAK,gBAAlB;AACD;AACF;;;8BAES;AAAA;;AACR,WAAK,QAAL,GAAgB,KAAhB;;AAEA,WAAK,UAAL,GAAkB,IAAlB;;AAEA,aAAO,mBAAP,CAA2B,QAA3B,EAAqC,KAAK,cAA1C;;AAEA,QAAE,OAAF,CAAU,KAAK,SAAf,EAA0B,iBAAS;AACjC,cAAK,SAAL,CAAe,WAAf,CAA2B,KAA3B;AACA,gBAAQ,IAAR;AACD,OAHD;AAIA,WAAK,SAAL,GAAiB,IAAjB;AACD;;;uCAEkB;;AAElB;;;gCAEW,K,EAAO,W,EAAa;;;AAG9B,UAAM,QAAQ,KAAK,OAAL,CAAa,KAAK,kBAAlB,CAAd;;AAEA,UAAI,KAAK,QAAT,EAAmB;AACjB,YAAI,MAAM,QAAN,IAAkB,EAAE,UAAF,CAAa,MAAM,QAAnB,CAAtB,EAAoD;AAClD,cAAI,SAAS,MAAM,QAAN,EAAb;;AAEA,cAAI,OAAO,IAAP,KAAgB,OAApB,EAA6B;AAC3B,iBAAK,SAAL;AACD;AACF;AACF;AACF;;;iCAEY,K,EAAO,U,EAAY;;AAE/B;;;qCAEgB;AAAA;;;;AAGf,UAAI,CAAC,KAAK,MAAV,EAAkB;;AAEhB,aAAK,MAAL,GAAc,IAAd;AACA,aAAK,SAAL,CAAe,SAAf,CAAyB,GAAzB,CAA6B,cAA7B;AACD;;AAED,UAAM,QAAQ,KAAK,OAAL,CAAa,KAAK,kBAAlB,CAAd;;AAEA,UAAI,KAAK,QAAT,EAAmB;AACjB,YAAI,gBAAgB,KAAK,MAAL,CAAY,aAAhC;;AAEA,YAAI,MAAM,QAAV,EAAoB;AAClB,cAAI,EAAE,UAAF,CAAa,MAAM,QAAnB,CAAJ,EAAkC;AAChC,gBAAI,SAAS,MAAM,QAAN,EAAb;;AAEA,gBAAI,OAAO,IAAP,KAAgB,OAApB,EAA6B;AAC3B;AACD;AACF;;AAED,cAAI,EAAE,QAAF,CAAW,MAAM,QAAjB,CAAJ,EAAgC;AAC9B,4BAAgB,MAAM,QAAtB;AACD;AACF;;AAED,aAAK,gBAAL,GAAwB,WAAW,YAAM;AACvC,iBAAK,SAAL;AACD,SAFuB,EAErB,aAFqB,CAAxB;AAGD;AACF;;;6BAEQ,S,EAAW;AAClB,UAAI,KAAK,UAAT,EAAqB;AACnB;AACD;;AAED,WAAK,IAAL,GAAY,QAAQ,YAAY,KAAK,cAAzB,CAAZ;;AAEA,UAAI;AACF,aAAK,WAAL;;AAEA,eAAO,qBAAP,CAA6B,KAAK,QAAL,CAAc,IAAd,CAAmB,IAAnB,CAA7B;AAED,OALD,CAKE,OAAO,KAAP,EAAc;AACd,gBAAQ,KAAR,CAAc,KAAd;AACD;;AAED,WAAK,cAAL,GAAsB,SAAtB;AACD;;;oCAEe;AACd,UAAM,SAAS,SAAS,aAAT,CAAuB,QAAvB,CAAf;AACA,aAAO,KAAP,CAAa,QAAb,GAAwB,UAAxB;AACA,aAAO,KAAP,CAAa,KAAb,GAAqB,MAArB;AACA,aAAO,KAAP,CAAa,MAAb,GAAsB,MAAtB;AACA,WAAK,aAAL,CAAmB,MAAnB;AACA,aAAO,MAAP;AACD;;;sCAEiB;AAChB,WAAK,cAAL,GAAsB,KAAK,aAAL,EAAtB;AACA,WAAK,eAAL,GAAuB,KAAK,cAAL,CAAoB,UAApB,CAA+B,IAA/B,CAAvB;;AAEA,WAAK,WAAL,GAAmB,KAAK,aAAL,EAAnB;AACA,WAAK,YAAL,GAAoB,KAAK,WAAL,CAAiB,UAAjB,CAA4B,IAA5B,CAApB;;AAEA,WAAK,WAAL,GAAmB,KAAK,aAAL,EAAnB;AACA,WAAK,YAAL,GAAoB,KAAK,WAAL,CAAiB,UAAjB,CAA4B,IAA5B,CAApB;;AAEA,WAAK,aAAL,GAAqB,KAAK,aAAL,EAArB;AACA,WAAK,cAAL,GAAsB,KAAK,aAAL,CAAmB,UAAnB,CAA8B,OAA9B,KAA0C,KAAK,aAAL,CAAmB,UAAnB,CAA8B,oBAA9B,CAAhE;AACA,WAAK,cAAL,CAAoB,WAApB,CAAgC,KAAK,cAAL,CAAoB,mBAApD,EAAyE,IAAzE;;AAEA,WAAK,SAAL,CAAe,WAAf,CAA2B,KAAK,aAAhC;AACD;;;kCAEa,M,EAAQ;AACpB,WAAK,MAAL,GAAc,OAAO,gBAArB;AACA,WAAK,MAAL,GAAc,KAAK,SAAL,CAAe,WAAf,GAA6B,KAAK,MAAhD;AACA,WAAK,OAAL,GAAe,KAAK,SAAL,CAAe,YAAf,GAA8B,KAAK,MAAlD;AACA,aAAO,KAAP,GAAe,KAAK,MAApB;AACA,aAAO,MAAP,GAAgB,KAAK,OAArB;AACD;;;6BAEQ;;AAEP,WAAK,gBAAL,GAAwB,EAAxB;;AAEA,WAAK,aAAL,CAAmB,KAAK,cAAxB;AACA,WAAK,aAAL,CAAmB,KAAK,WAAxB;AACA,WAAK,aAAL,CAAmB,KAAK,WAAxB;AACA,WAAK,aAAL,CAAmB,KAAK,aAAxB;;AAEA,WAAK,WAAL,CAAiB,IAAjB;AACD;;;kCAEa,O,EAAS;AACrB,cAAQ,SAAR,CAAkB,CAAlB,EAAqB,CAArB,EAAwB,KAAK,MAA7B,EAAqC,KAAK,OAA1C;AACD;;;4CAEuB;AACtB,aAAO,KAAK,mBAAL,GAA2B,CAA3B,IAAgC,KAAK,mBAAL,GAA2B,CAAlE;AACD;;;qCAEyE;AAAA,UAA3D,sBAA2D,yDAAlC,EAAkC;AAAA,UAA9B,uBAA8B,yDAAJ,EAAI;;AACxE,UAAM,0BAA0B,EAAE,KAAF,CAAQ,EAAR,EAAY,KAAK,MAAL,CAAY,UAAxB,EAAoC,0BAA0B,EAA9D,CAAhC;AACA,UAAM,2BAA2B,EAAE,KAAF,CAAQ,EAAR,EAAY,KAAK,MAAL,CAAY,UAAxB,EAAoC,2BAA2B,EAA/D,CAAjC;AACA,UAAI,wBAAwB,IAAxB,KAAiC,iBAArC,EAAwD;AACtD,gCAAwB,IAAxB,GAA+B,EAAE,MAAF,CAAS,KAAK,MAAL,CAAY,WAArB,CAA/B;AACD,OAFD,MAEO;AACL,gCAAwB,IAAxB,GAA+B,KAAK,MAAL,CAAY,WAAZ,CAAwB,wBAAwB,IAAhD,CAA/B;AACD;AACD,UAAI,yBAAyB,IAAzB,KAAkC,iBAAtC,EAAyD;AACvD,iCAAyB,IAAzB,GAAgC,EAAE,MAAF,CAAS,KAAK,MAAL,CAAY,WAArB,CAAhC;AACD,OAFD,MAEO;AACL,iCAAyB,IAAzB,GAAgC,KAAK,MAAL,CAAY,WAAZ,CAAwB,yBAAyB,IAAjD,CAAhC;AACD;AACD,UAAM,aAAa,wBAAwB,QAAxB,IAAoC,yBAAyB,QAA7D,GAAwE,uBAAxE,GAAkG,wBAArH;AACA,aAAO,UAAP;AACD;;;gCAEW,K,EAAO;AACjB,UAAM,eAAe,KAAK,OAAL,CAAa,KAAK,kBAAlB,CAArB;AACA,UAAM,YAAY,KAAK,OAAL,CAAa,KAAK,kBAAL,KAA4B,KAAK,OAAL,CAAa,MAAb,GAAsB,CAAlD,GAAsD,CAAtD,GAA0D,KAAK,kBAAL,GAA0B,CAAjG,CAAlB;AACA,UAAM,YAAY,KAAK,OAAL,CAAa,KAAK,kBAAL,KAA4B,CAA5B,GAAgC,KAAK,OAAL,CAAa,MAAb,GAAsB,CAAtD,GAA0D,KAAK,kBAAL,GAA0B,CAAjG,CAAlB;;AAEA,UAAI,0BAAJ;;;AAGA,UAAI,KAAJ,EAAW;AACT,qBAAa,SAAb,GAAyB,KAAzB;AACD;;;;AAID,UAAI,CAAC,aAAa,SAAd,IACF,aAAa,SADX,IAEF,CAAC,KAAK,qBAAL,EAFC,IAGF,KAAK,kBAAL,KAA4B,KAAK,kBAHnC,EAGuD;AACrD;AACD;;AAED,WAAK,UAAL,CAAgB,KAAK,eAArB,EAAsC,YAAtC;AACA,WAAK,UAAL,CAAgB,KAAK,YAArB,EAAmC,SAAnC;AACA,WAAK,UAAL,CAAgB,KAAK,YAArB,EAAmC,SAAnC;;;AAGA,UAAI,KAAK,YAAT,EAAuB;AACrB,aAAK,YAAL,CAAkB,OAAlB;AACD;AACD,UAAI,KAAK,UAAT,EAAqB;AACnB,aAAK,UAAL,CAAgB,OAAhB;AACD;;;AAGD,UAAI,KAAK,kBAAL,KAA4B,KAAK,kBAAjC,IAAuD,KAAK,qBAAL,EAA3D,EAAyF;;AAEvF,YAAK,KAAK,kBAAL,KAA4B,KAAK,kBAAjC,IAAuD,KAAK,oBAAL,KAA8B,mBAAtF,IACD,KAAK,kBAAL,KAA4B,KAAK,kBAAjC,IAAuD,KAAK,oBAAL,KAA8B,oBADxF,EAC+G;AAC7G,eAAK,YAAL,GAAoB,cAAc,KAAK,cAAnB,EAAmC,KAAK,cAAxC,CAApB;AACA,eAAK,UAAL,GAAkB,cAAc,KAAK,cAAnB,EAAmC,KAAK,WAAxC,CAAlB;AACA,8BAAoB,KAAK,cAAL,CAAoB,aAAa,cAAjC,EAAiD,UAAU,cAA3D,CAApB;AACD;;AAED,YAAK,KAAK,kBAAL,KAA4B,KAAK,kBAAjC,IAAuD,KAAK,oBAAL,KAA8B,oBAAtF,IACD,KAAK,kBAAL,KAA4B,KAAK,kBAAjC,IAAuD,KAAK,oBAAL,KAA8B,mBADxF,EAC8G;AAC5G,eAAK,YAAL,GAAoB,cAAc,KAAK,cAAnB,EAAmC,KAAK,WAAxC,CAApB;AACA,eAAK,UAAL,GAAkB,cAAc,KAAK,cAAnB,EAAmC,KAAK,cAAxC,CAAlB;AACA,8BAAoB,KAAK,cAAL,CAAoB,aAAa,cAAjC,EAAiD,UAAU,cAA3D,CAApB;AACD;AAEF,OAhBD,MAgBO;;AAEL,aAAK,YAAL,GAAoB,cAAc,KAAK,cAAnB,EAAmC,KAAK,cAAxC,CAApB;AACA,aAAK,UAAL,GAAkB,KAAK,YAAvB;AACD;;AAED,UAAI,qBAAqB,CAAC,KAAK,qBAAL,EAAtB,KACD,CAAC,KAAK,kBAAN,IAA4B,KAAK,kBAAL,CAAwB,IAAxB,KAAiC,kBAAkB,IAA/E,IAAuF,KAAK,kBAAL,CAAwB,IAAxB,KAAiC,iBADvH,CAAJ,EAC+I;;AAE7I,aAAK,kBAAL,GAA0B,iBAA1B;;AAEA,YAAI,KAAK,WAAT,EAAsB;;AAEpB,eAAK,WAAL,CAAiB,OAAjB;AACA,eAAK,WAAL,GAAmB,IAAnB;AACD;AACF;;AAED,UAAI,KAAK,kBAAT,EAA6B;AAC3B,YAAI,CAAC,KAAK,WAAV,EAAuB;AACrB,eAAK,WAAL,GAAmB,iBAAiB,KAAK,cAAtB,EAAsC,KAAK,kBAAL,CAAwB,IAAxB,CAA6B,MAAnE,CAAnB;AACD;;AAED,YAAI,KAAK,kBAAL,KAA4B,KAAK,kBAAjC,IAAuD,KAAK,qBAAL,EAA3D,EAAyF;;AAEvF,cAAM,oBAAoB,KAAK,KAAK,kBAAL,CAAwB,QAAvD;;AAEA,cAAI,KAAK,oBAAL,KAA8B,mBAAlC,EAAuD;AACrD,iBAAK,mBAAL,GAA2B,KAAK,qBAAL,KAA+B,KAAK,mBAAL,GAA2B,iBAA1D,GAA8E,iBAAzG;AACD;AACD,cAAI,KAAK,oBAAL,KAA8B,oBAAlC,EAAwD;AACtD,iBAAK,mBAAL,GAA2B,KAAK,qBAAL,KAA+B,KAAK,mBAAL,GAA2B,iBAA1D,GAA8E,IAAI,iBAA7G;AACD;AACF;;;AAGD,YAAI,KAAK,mBAAL,GAA2B,CAA/B,EAAkC;AAChC,eAAK,mBAAL,GAA2B,CAA3B;AACD;AACD,YAAI,KAAK,mBAAL,GAA2B,CAA/B,EAAkC;AAChC,eAAK,mBAAL,GAA2B,CAA3B;AACD;;AAED,YAAM,0BAA0B,MAAM,KAAK,kBAAL,CAAwB,IAA9B,EAAoC,KAAK,mBAAzC,CAAhC;;AAEA,aAAK,WAAL,CAAiB,MAAjB,CAAwB,uBAAxB,EAAiD,KAAK,YAAtD,EAAoE,KAAK,UAAzE,EAAqF,KAAK,kBAAL,CAAwB,IAAxB,CAA6B,QAAlH;AAED,OA7BD,MA6BO;;AAEL,YAAI,CAAC,KAAK,WAAV,EAAuB;AACrB,eAAK,WAAL,GAAmB,iBAAiB,KAAK,cAAtB,EAAsC,sBAAtC,CAAnB;AACD;;AAED,aAAK,WAAL,CAAiB,MAAjB,CAAwB,CAAxB,EAA2B,KAAK,YAAhC,EAA8C,KAAK,UAAnD;AACD;;;AAGD,UAAI,aAAa,MAAjB,EAAyB;AACvB,qBAAa,SAAb,GAAyB,IAAzB;;AAEA,YAAI,CAAC,KAAK,qBAAV,EAAiC;AAC/B,eAAK,qBAAL,GAA6B,IAA7B;;AAEA,eAAK,iBAAL,CAAuB,KAAK,kBAA5B;;AAEA,eAAK,cAAL;AACD;AACF;;;AAGD,UAAI,KAAK,kBAAL,KAA4B,KAAK,kBAAjC,IAAuD,CAAC,KAAK,qBAAL,EAA5D,EAA0F;AACxF,aAAK,kBAAL,GAA0B,KAAK,kBAA/B;;AAEA,aAAK,aAAL,CAAmB,KAAK,eAAxB;AACA,aAAK,aAAL,CAAmB,KAAK,YAAxB;AACA,aAAK,aAAL,CAAmB,KAAK,YAAxB;;AAEA,aAAK,kBAAL;;AAEA,aAAK,gBAAL;AACD;AACF;;;+BAEU,O,EAAS,K,EAAO;AACzB,YAAM,SAAN,GAAkB,MAAM,OAAN,CAAc,MAAd,CAAqB;AAAA,eAAU,OAAO,IAAP,KAAgB,OAA1B;AAAA,OAArB,EAAwD,MAAxD,GAAiE,CAAnF;AACA,YAAM,SAAN,GAAkB,KAAlB;AACA,YAAM,MAAN,GAAe,KAAf;AACA,UAAI,CAAC,MAAM,OAAX,EAAoB;AAClB,cAAM,OAAN,GAAgB,KAAhB;AACD;;AAED,UAAI,MAAM,UAAV,EAAsB;AACpB,gBAAQ,SAAR,GAAoB,MAAM,UAA1B;AACA,gBAAQ,QAAR,CAAiB,CAAjB,EAAoB,CAApB,EAAuB,KAAK,MAA5B,EAAoC,KAAK,OAAzC;AACD;;AAED,UAAI,MAAM,OAAN,CAAc,MAAlB,EAA0B;AACxB,aAAK,iBAAL,CAAuB,OAAvB,EAAgC,KAAhC,EAAuC,CAAvC;AACD;AACF;;;sCAEiB,O,EAAS,K,EAAO,K,EAAO;AACvC,UAAM,SAAS,MAAM,OAAN,CAAc,KAAd,CAAf;;AAEA,UAAI,CAAC,MAAL,EAAa;AACX,cAAM,MAAN,GAAe,IAAf;;AAEA,YAAI,CAAC,MAAM,OAAX,EAAoB;AAClB,gBAAM,OAAN,GAAgB,IAAhB;AACA,eAAK,YAAL,CAAkB,KAAlB,EAAyB,KAAK,OAAL,CAAa,OAAb,CAAqB,KAArB,CAAzB;AACD;AACD;AACD;;AAED,UAAM,WAAW,KAAK,iBAAL,CAAuB,IAAvB,CAA4B,IAA5B,EAAkC,OAAlC,EAA2C,KAA3C,EAAkD,QAAQ,CAA1D,CAAjB;;AAEA,cAAQ,OAAO,IAAf;AACE,aAAK,OAAL;AACE,eAAK,UAAL,CAAgB,OAAhB,EAAyB,MAAzB,EAAiC,QAAjC;AACA;AACF,aAAK,OAAL;AACE,eAAK,UAAL,CAAgB,OAAhB,EAAyB,MAAzB,EAAiC,QAAjC;AACA;AACF;AACE,gBAAM,IAAI,KAAJ,CAAU,sBAAV,CAAN;AARJ;AAUD;;;qCAEgB,Q,EAAqB;AAAA;;AAAA,UAAX,KAAW,yDAAH,CAAG;;AACpC,UAAM,UAAU,EAAhB;;AAEA,eAAS,OAAT,CAAiB,UAAC,GAAD,EAAM,KAAN,EAAgB;AAC/B,YAAI,cAAJ;;AAEA,YAAI,SAAS,CAAC,OAAK,MAAN,EAAc,OAAK,OAAnB,EAA4B,OAAK,MAAjC,EAAyC,OAAK,OAA9C,EAAuD,KAAvD,CAAb;;AAEA,kBAAU,KAAV;;AAEA,YAAI,OAAO,CAAP,IAAY,OAAO,CAAvB,EAA0B;AACxB,cAAI,QAAQ,CAAZ,EAAe;AACb,oBAAQ,MAAM,MAAd;AACD,WAFD,MAEO;AACL,oBAAS,MAAM,MAAP,GAAiB,QAAQ,QAAQ,CAAhB,CAAzB;AACD;AACF,SAND,MAMO;AACL,cAAI,QAAQ,CAAZ,EAAe;AACb,oBAAQ,GAAR;AACD,WAFD,MAEO;AACL,oBAAQ,SAAS,QAAQ,QAAQ,CAAhB,CAAT,GAA8B,KAAK,GAAL,CAAS,GAAT,CAAtC;AACD;AACF;;AAED,gBAAQ,IAAR,CAAa,KAAb;AACD,OAtBD;;AAwBA,UAAM,SAAS;AACb,WAAG,QAAQ,CAAR,IAAa,KADH;AAEb,WAAG,QAAQ,CAAR,IAAa,KAFH;AAGb,eAAO,QAAQ,CAAR,IAAa,KAHP;AAIb,gBAAQ,QAAQ,CAAR,IAAa;AAJR,OAAf;;AAOA,aAAO,MAAP;AACD;;;kCAEa,G,EAAK,G,EAAK,S,EAAW;AACjC,UAAM,WAAW,IAAI,KAAJ,GAAY,IAAI,MAAjC;AACA,UAAM,WAAW,IAAI,KAAJ,GAAY,IAAI,MAAjC;;AAEA,UAAI,aAAa,cAAc,MAA/B,EAAuC;AACrC,YAAI,WAAW,QAAf,EAAyB;AACvB,cAAM,YAAY,IAAI,MAAJ,IAAc,IAAI,KAAJ,GAAY,IAAI,KAA9B,CAAlB;AACA,cAAI,CAAJ,GAAQ,IAAI,CAAJ,GAAS,CAAC,IAAI,MAAJ,GAAa,SAAd,IAA2B,GAA5C;AACA,cAAI,MAAJ,GAAa,SAAb;AACD;AACD,YAAI,WAAW,QAAf,EAAyB;AACvB,cAAM,WAAW,IAAI,KAAJ,IAAa,IAAI,MAAJ,GAAa,IAAI,MAA9B,CAAjB;AACA,cAAI,CAAJ,GAAQ,IAAI,CAAJ,GAAS,CAAC,IAAI,KAAJ,GAAY,QAAb,IAAyB,GAA1C;AACA,cAAI,KAAJ,GAAY,QAAZ;AACD;AACF,OAXD,MAWO;AACL,YAAI,WAAW,QAAf,EAAyB;AACvB,cAAM,aAAY,IAAI,KAAJ,IAAa,IAAI,MAAJ,GAAa,IAAI,KAA9B,CAAlB;AACA,cAAI,CAAJ,GAAQ,IAAI,CAAJ,GAAS,CAAC,IAAI,MAAJ,GAAa,UAAd,IAA2B,GAA5C;AACA,cAAI,MAAJ,GAAa,UAAb;AACD;AACD,YAAI,WAAW,QAAf,EAAyB;AACvB,cAAM,YAAW,IAAI,MAAJ,GAAa,QAA9B;AACA,cAAI,CAAJ,GAAQ,IAAI,CAAJ,GAAS,CAAC,IAAI,KAAJ,GAAY,SAAb,IAAyB,GAA1C;AACA,cAAI,KAAJ,GAAY,SAAZ;AACD;AACF;;;AAGD,UAAM,aAAa,CAAC,GAAD,EAAM,GAAN,EAAW,OAAX,EAAoB,QAApB,CAAnB;;AAEA,iBAAW,OAAX,CAAmB,gBAAQ;AACzB,YAAI,IAAJ,IAAY,KAAK,KAAL,CAAW,IAAI,IAAJ,CAAX,CAAZ;AACA,YAAI,IAAJ,IAAY,KAAK,KAAL,CAAW,IAAI,IAAJ,CAAX,CAAZ;AACD,OAHD;;AAKA,aAAO;AACL,gBADK;AAEL;AAFK,OAAP;AAID;;;6BAEQ,G,EAAK,I,EAAM;AAClB,aAAO;AACL,WAAG,IAAI,CADF;AAEL,WAAG,IAAI,CAFF;AAGL,eAAO,KAAK,CAAL,KAAW,CAAX,GAAe,IAAI,KAAJ,GAAY,KAAK,CAAL,CAA3B,GAAqC,KAAK,CAAL,CAHvC;AAIL,gBAAQ,KAAK,CAAL,KAAW,CAAX,GAAe,IAAI,MAAJ,GAAa,KAAK,CAAL,CAA5B,GAAsC,KAAK,CAAL;AAJzC,OAAP;AAMD;;;+BAEU,G,EAAK,I,EAAM,S,EAAW,Q,EAAU;AACzC,UAAI,aAAJ;AACA,UAAI,gBAAJ;;AAEA,UAAI,cAAc,CAAlB;AACA,UAAI,eAAe,CAAnB;;AAEA,UAAI,aAAa,cAAc,MAA/B,EAAuC;AACrC,eAAO,KAAK,IAAL,CAAU,IAAI,MAAJ,GAAa,KAAK,MAA5B,CAAP;AACA,kBAAU,KAAK,IAAL,CAAU,IAAI,KAAJ,GAAY,KAAK,KAA3B,CAAV;;AAEA,sBAAc,CAAE,KAAK,KAAL,GAAa,OAAd,GAAyB,IAAI,KAA9B,IAAuC,GAArD;AACA,uBAAe,CAAE,KAAK,MAAL,GAAc,IAAf,GAAuB,IAAI,MAA5B,IAAsC,GAArD;AAED,OAPD,MAOO;AACL,eAAO,KAAK,KAAL,CAAW,IAAI,MAAJ,GAAa,KAAK,MAA7B,CAAP;AACA,kBAAU,KAAK,KAAL,CAAW,IAAI,KAAJ,GAAY,KAAK,KAA5B,CAAV;AACD;;AAED,UAAI,MAAM,CAAV;AACA,UAAI,SAAS,CAAb;;AAEA,UAAM,aAAa,OAAO,OAA1B;;AAEA,WAAK,IAAI,IAAI,CAAb,EAAgB,IAAI,UAApB,EAAgC,GAAhC,EAAqC;AACnC,iBAAS;AACP,aAAI,KAAK,CAAL,GAAU,SAAS,KAAK,KAAzB,GAAmC,WAD/B;AAEP,aAAI,KAAK,CAAL,GAAU,MAAM,KAAK,MAAtB,GAAiC;AAF7B,SAAT;;AAKA,YAAI,WAAW,UAAU,CAAzB,EAA4B;AAC1B;AACD;;AAED,iBAAS,SAAS,UAAU,CAAnB,GAAuB,SAAS,CAAhC,GAAoC,CAA7C;AACD;AACF;;;kCAEa,K,EAAO,C,EAAG,C,EAAG,K,EAAO,M,EAAQ;AACxC,UAAM,aAAa,SAAS,aAAT,CAAuB,QAAvB,CAAnB;AACA,iBAAW,KAAX,GAAmB,MAAM,YAAzB;AACA,iBAAW,MAAX,GAAoB,MAAM,aAA1B;AACA,UAAM,cAAc,WAAW,UAAX,CAAsB,IAAtB,CAApB;AACA,kBAAY,SAAZ,CAAsB,KAAtB,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,MAAM,YAAzC,EAAuD,MAAM,aAA7D;AACA,aAAO,YAAY,YAAZ,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B,KAA/B,EAAsC,MAAtC,EAA8C,IAArD;AACD;;;8BAES,Q,EAAU,Q,EAAU;AAAA;;AAC5B,UAAI,KAAK,SAAL,CAAe,QAAf,CAAJ,EAA8B;AAC5B,iBAAS,KAAK,SAAL,CAAe,QAAf,CAAT;AACA;AACD;;AAED,UAAM,QAAQ,IAAI,KAAJ,EAAd;AACA,YAAM,WAAN,GAAoB,WAApB;AACA,YAAM,GAAN,GAAY,QAAZ;AACA,YAAM,OAAN,GAAgB,iBAAS;AACvB,eAAK,OAAL;;AAEA,cAAM,IAAI,KAAJ,CAAU,sBAAV,EAAkC,QAAlC,CAAN;AACD,OAJD;AAKA,YAAM,MAAN,GAAe,iBAAS;AACtB,eAAK,SAAL,CAAe,QAAf,IAA2B,KAA3B;AACA,iBAAS,KAAT;AACD,OAHD;AAID;;;iCAEY,K,EAAO,G,EAAK,G,EAAK,Q,EAAU;AAAA;;AACtC,UAAM,kBAAkB,KAAK,SAAL,CAAe;AACrC,aAAK,MAAM,GAD0B;AAErC;AAFqC,OAAf,CAAxB;;AAKA,UAAI,KAAK,gBAAL,CAAsB,eAAtB,CAAJ,EAA4C;AAC1C,iBAAS,KAAK,gBAAL,CAAsB,eAAtB,CAAT;AACA;AACD;;AAED,WAAK,YAAL,CAAkB;AAChB,aAAK,KAAK,aAAL,CAAmB,KAAnB,EAA0B,IAAI,CAA9B,EAAiC,IAAI,CAArC,EAAwC,IAAI,KAA5C,EAAmD,IAAI,MAAvD,CADW;AAEhB,eAAO,IAAI,KAFK;AAGhB,gBAAQ,IAAI,MAHI;AAIhB,iBAAS,IAAI,KAJG;AAKhB,kBAAU,IAAI,MALE;AAMhB,iBAAS,CANO;AAOhB,eAAO,KAPS;AAQhB,uBAAe,CARC;AAShB,uBAAe,GATC;AAUhB,0BAAkB;AAVF,OAAlB,EAWG,UAAC,KAAD,EAAQ,MAAR,EAAmB;AACpB,YAAI,KAAJ,EAAW;AACT,kBAAQ,KAAR,CAAc,KAAd;AACA;AACD;;AAED,YAAI,OAAO,MAAX,EAAmB;AACjB,iBAAK,iBAAL,GAAyB,IAAI,SAAJ,CAAc,IAAI,iBAAJ,CAAsB,MAAtB,CAAd,EAA6C,IAAI,KAAjD,EAAwD,IAAI,MAA5D,CAAzB;;AAEA,iBAAK,gBAAL,CAAsB,eAAtB,IAAyC,OAAK,iBAA9C;;AAEA,mBAAS,OAAK,gBAAL,CAAsB,eAAtB,CAAT;;AAEA;AACD;;AAED,gBAAQ,KAAR,CAAc,IAAI,KAAJ,CAAU,eAAV,CAAd,EAA0C,MAAM,GAAhD,EAAqD,GAArD,EAA0D,GAA1D;AACD,OA5BD;AA6BD;;;+BAEU,O,EAAS,M,EAAQ,Q,EAAU;AAAA;;AACpC,WAAK,SAAL,CAAe,OAAO,GAAtB,EAA2B,iBAAS;AAClC,YAAI,MAAM;AACR,aAAG,CADK;AAER,aAAG,CAFK;AAGR,iBAAO,MAAM,YAHL;AAIR,kBAAQ,MAAM;AAJN,SAAV;;AAOA,YAAI,MAAM,OAAK,gBAAL,CAAsB,OAAO,QAA7B,EAAuC,OAAK,MAA5C,CAAV;;AAEA,YAAI,OAAO,IAAX,EAAiB;AAAA;AACf,gBAAI,OAAO,OAAK,QAAL,CAAc,GAAd,EAAmB,OAAO,IAAP,CAAY,IAA/B,CAAX;;AAEA,gBAAM,gBAAgB,OAAK,aAAL,CAAmB,GAAnB,EAAwB,IAAxB,EAA8B,OAAO,IAAP,CAAY,SAA1C,CAAtB;;AAEA,mBAAK,YAAL,CAAkB,KAAlB,EAAyB,cAAc,GAAvC,EAA4C,cAAc,GAA1D,EAA+D,4BAAoB;;AAEjF,qBAAK,UAAL,CAAgB,GAAhB,EAAqB,cAAc,GAAnC,EAAwC,OAAO,SAA/C,EAA0D,qBAAa;AACrE,wBAAQ,YAAR,CAAqB,gBAArB,EAAuC,UAAU,CAAjD,EAAoD,UAAU,CAA9D;AACD,eAFD;;AAIA;AACD,aAPD;;AASA;AAAA;AAAA;AAde;;AAAA;AAehB;;AAED,YAAM,gBAAgB,OAAK,aAAL,CAAmB,GAAnB,EAAwB,GAAxB,EAA6B,OAAO,SAApC,CAAtB;;AAEA,cAAM,cAAc,GAApB;AACA,cAAM,cAAc,GAApB;;AAEA,eAAK,YAAL,CAAkB,KAAlB,EAAyB,GAAzB,EAA8B,GAA9B,EAAmC,4BAAoB;AACrD,kBAAQ,YAAR,CAAqB,gBAArB,EAAuC,IAAI,CAA3C,EAA8C,IAAI,CAAlD;;AAEA;AACD,SAJD;AAKD,OArCD;AAsCD;;;kCAEa,K,EAAO;AACnB,UAAM,aAAa,SAAS,aAAT,CAAuB,QAAvB,CAAnB;AACA,iBAAW,KAAX,GAAmB,MAAM,UAAzB;AACA,iBAAW,MAAX,GAAoB,MAAM,WAA1B;AACA,UAAM,cAAc,WAAW,UAAX,CAAsB,IAAtB,CAApB;AACA,kBAAY,SAAZ,CAAsB,KAAtB,EAA6B,CAA7B,EAAgC,CAAhC,EAAmC,MAAM,UAAzC,EAAqD,MAAM,WAA3D;AACA,aAAO,YAAY,aAAZ,CAA0B,CAA1B,EAA6B,CAA7B,EAAgC,MAAM,UAAtC,EAAkD,MAAM,WAAxD,EAAqE,IAA5E;AACD;;;8BAES,M,EAA6B;AAAA;;AAAA,UAArB,QAAqB,yDAAV,YAAM,CAAE,CAAE;;AACrC,UAAM,WAAW,KAAK,SAAL,CAAe,OAAO,OAAtB,CAAjB;;AAEA,UAAI,KAAK,SAAL,CAAe,QAAf,CAAJ,EAA8B;AAC5B,iBAAS,KAAK,SAAL,CAAe,QAAf,CAAT;;AAEA,eAAO,KAAK,SAAL,CAAe,QAAf,CAAP;AACD;;AAED,UAAM,QAAQ,SAAS,aAAT,CAAuB,OAAvB,CAAd;AACA,YAAM,KAAN,CAAY,OAAZ,GAAsB,MAAtB;AACA,YAAM,WAAN,GAAoB,WAApB;AACA,YAAM,KAAN,GAAc,IAAd;AACA,WAAK,SAAL,CAAe,WAAf,CAA2B,KAA3B;;AAEA,aAAO,OAAP,CAAe,OAAf,CAAuB,kBAAU;AAC/B,YAAM,UAAU,SAAS,aAAT,CAAuB,QAAvB,CAAhB;AACA,gBAAQ,GAAR,GAAc,OAAO,GAArB;AACA,gBAAQ,IAAR,GAAe,OAAO,IAAtB;AACA,gBAAQ,WAAR,GAAsB,WAAtB;AACA,cAAM,WAAN,CAAkB,OAAlB;AACD,OAND;;AAQA,WAAK,SAAL,CAAe,QAAf,IAA2B,KAA3B;;AAEA,YAAM,gBAAN,CAAuB,gBAAvB,EAAyC,YAAM;AAC7C,iBAAS,KAAT;AACD,OAFD;;AAIA,YAAM,UAAN,GAAmB,CAAnB;;AAEA,YAAM,gBAAN,CAAuB,OAAvB,EAAgC,YAAM;AACpC,cAAM,IAAN;;AAEA,cAAM,UAAN,IAAoB,CAApB;;AAEA,eAAK,WAAL,CAAiB,KAAjB,EAAwB,MAAxB;AACD,OAND;;AAQA,aAAO,KAAP;AACD;;;+BAEU,O,EAAS,M,EAAQ,Q,EAAU;AAAA;;AACpC,WAAK,SAAL,CAAe,MAAf,EAAuB,iBAAS;AAC9B,YAAI,MAAM,UAAN,KAAqB,CAArB,IAA0B,MAAM,WAAN,KAAsB,CAApD,EAAuD;AACrD;AACD;;AAED,YAAI,MAAM;AACR,aAAG,CADK;AAER,aAAG,CAFK;AAGR,iBAAO,MAAM,UAHL;AAIR,kBAAQ,MAAM;AAJN,SAAV;;AAOA,YAAI,MAAM,OAAK,gBAAL,CAAsB,OAAO,QAA7B,EAAuC,OAAK,MAA5C,CAAV;;AAEA,YAAI,OAAO,IAAX,EAAiB;AAAA;AACf,gBAAI,OAAO,OAAK,QAAL,CAAc,GAAd,EAAmB,OAAO,IAAP,CAAY,IAA/B,CAAX;;AAEA,gBAAM,gBAAgB,OAAK,aAAL,CAAmB,GAAnB,EAAwB,IAAxB,EAA8B,OAAO,IAAP,CAAY,SAA1C,CAAtB;;AAEA,mBAAK,UAAL,CAAgB,GAAhB,EAAqB,cAAc,GAAnC,EAAwC,OAAO,SAA/C,EAA0D,qBAAa;AACrE,sBAAQ,SAAR,CAAkB,KAAlB,EAAyB,IAAI,CAA7B,EAAgC,IAAI,CAApC,EAAuC,IAAI,KAA3C,EAAkD,IAAI,MAAtD,EAA8D,UAAU,CAAxE,EAA2E,UAAU,CAArF,EAAwF,KAAK,KAA7F,EAAoG,KAAK,MAAzG;AACD,aAFD;;AAIA;;AAEA;AAAA;AAAA;AAXe;;AAAA;AAYhB;;AAED,YAAM,gBAAgB,OAAK,aAAL,CAAmB,GAAnB,EAAwB,GAAxB,EAA6B,OAAO,SAApC,CAAtB;;AAEA,cAAM,cAAc,GAApB;AACA,cAAM,cAAc,GAApB;;AAEA,gBAAQ,SAAR,CAAkB,KAAlB,EAAyB,IAAI,CAA7B,EAAgC,IAAI,CAApC,EAAuC,IAAI,KAA3C,EAAkD,IAAI,MAAtD,EAA8D,IAAI,CAAlE,EAAqE,IAAI,CAAzE,EAA4E,IAAI,KAAhF,EAAuF,IAAI,MAA3F;;AAEA;AACD,OApCD;AAqCD;;;sCAEiB,K,EAAO;AAAA;;AACvB,WAAK,OAAL,CAAa,KAAb,EAAoB,OAApB,CAA4B,OAA5B,CAAoC,kBAAU;AAC5C,YAAI,OAAO,IAAP,KAAgB,OAApB,EAA6B;AAC3B,iBAAK,SAAL,CAAe,MAAf,EAAuB,iBAAS;AAC9B,kBAAM,UAAN,GAAmB,CAAnB;AACA,kBAAM,WAAN,GAAoB,CAApB;AACA,kBAAM,IAAN;AACD,WAJD;AAKD;AACF,OARD;AASD;;;yCAEoB;AAAA;;AACnB,UAAM,qBAAqB,EAA3B;;AAEA,WAAK,OAAL,CAAa,KAAK,kBAAlB,EAAsC,OAAtC,CAA8C,OAA9C,CAAsD,kBAAU;AAC9D,YAAI,OAAO,IAAP,KAAgB,OAApB,EAA6B;AAC3B,6BAAmB,IAAnB,CAAwB,QAAK,SAAL,CAAe,MAAf,CAAxB;AACD;AACF,OAJD;;AAMA,WAAK,OAAL,CAAa,OAAb,CAAqB,UAAC,KAAD,EAAQ,KAAR,EAAkB;AACrC,YAAI,UAAU,QAAK,kBAAnB,EAAuC;AACrC;AACD;;AAED,cAAM,OAAN,CAAc,OAAd,CAAsB,kBAAU;AAC9B,cAAI,OAAO,IAAP,KAAgB,OAApB,EAA6B;AAC3B,oBAAK,SAAL,CAAe,MAAf,EAAuB,iBAAS;AAC9B,kBAAI,mBAAmB,OAAnB,CAA2B,KAA3B,MAAsC,CAAC,CAA3C,EAA8C;AAC5C,sBAAM,UAAN,GAAmB,CAAnB;AACA,sBAAM,WAAN,GAAoB,CAApB;AACA,sBAAM,KAAN;AACD;AACF,aAND;AAOD;AACF,SAVD;AAWD,OAhBD;AAiBD;;;;;;kBAGY,K;;;;;;;;ACx1Bf,IAAM,cAAc;AAClB,QAAM;AACJ,mTADI;AAcJ,cAAU;AAdN,GADY;AAiBlB,aAAW;AACT,sVADS;AAcT,cAAU;AAdD,GAjBO;AAiClB,UAAQ;AACN,iZADM;AAgBN,cAAU;AAhBJ,GAjCU;AAmDlB,YAAU;AACR,iZADQ;AAgBR,cAAU;AAhBF,GAnDQ;AAqElB,aAAW;AACT,iZADS;AAgBT,cAAU;AAhBD,GArEO;AAuFlB,YAAU;AACR,iZADQ;AAgBR,cAAU;AAhBF,GAvFQ;AAyGlB,UAAQ;AACN,y1BADM;AA0BN,cAAU;AACR,eAAS,GADD;AAER,eAAS,GAFD;AAGR,kBAAY,CAHJ;AAIR,YAAM;AAJE;AA1BJ,GAzGU;AA0IlB,eAAa;AACX,01BADW;AAgCX,cAAU;AAhCC,GA1IK;AA4KlB,iBAAe;AACb,qvDADa;AAiEb,cAAU;AACR,kBAAY,CADJ;AAER,mBAAa,CAFL;AAGR,aAAO;AAHC;AAjEG,GA5KG;AAmPlB,WAAS;AACP,m8CADO;AA8CP,cAAU;AACR,kBAAY,CADJ;AAER,kBAAY;AAFJ;AA9CH,GAnPS;AAsSlB,aAAW;AACT,m8CADS;AA8CT,cAAU;AACR,kBAAY,CADJ;AAER,kBAAY,CAAC;AAFL;AA9CD,GAtSO;AAyVlB,aAAW;AACT,m8CADS;AA8CT,cAAU;AACR,kBAAY,CADJ;AAER,kBAAY;AAFJ;AA9CD,GAzVO;AA4YlB,cAAY;AACV,m8CADU;AA8CV,cAAU;AACR,kBAAY,CAAC,CADL;AAER,kBAAY;AAFJ;AA9CA;AA5YM,CAApB;;kBAice,W","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","var Showy = require('./src/showy').default;\nShowy.DefaultTransitions = require('./src/transitions').default;\n\nwindow.Showy = Showy;\n\nmodule.exports = Showy;\n","/**\n * TODO\n * - autoplay: wait for slide._loaded\n * - optionally reset video on change\n * - fade objects on load\n * - events (ready, progress etc)\n * - cache video frames (assume frame rate and round currentTime to get frame)\n * - video options (loop?, sound?)\n * - fallback for no-video / autoplay on mobile\n * - effects/filters (sepia / grayscale etc)\n * - fallback for no-webgl (use gsap?)\n */\n\nconst TRANSITION_FORWARDS = 'forwards';\nconst TRANSITION_BACKWARDS = 'backwards';\nconst TRANSITION_RANDOM = 'random';\n\nconst TRANSITION_NONE_SHADER = `\n  #ifdef GL_ES\n  precision highp float;\n  #endif\n  uniform sampler2D from, to;\n  uniform float progress;\n  uniform vec2 resolution;\n\n  void main() {\n    vec2 p = gl_FragCoord.xy / resolution.xy;\n    gl_FragColor = texture2D(to, p);\n  }\n`;\n\n// Polyfill playing status\nif (window.HTMLMediaElement) {\n  Object.defineProperty(HTMLMediaElement.prototype, 'playing', {\n    get: function () {\n      return !!(this.currentTime > 0 && !this.paused && !this.ended && this.readyState > 2);\n    },\n  });\n}\n\nclass Showy {\n  constructor(config) {\n    const defaultConfig = {\n      container: 'body',\n      slides: [],\n      autoplay: false,\n      slideDuration: 3000,\n      transitions: Showy.DefaultTransitions,\n      transition: {\n        name: 'random',\n        duration: 2000,\n        ease: 'linear',\n        priority: 0,\n      },\n    };\n\n    this.config = _.merge({}, defaultConfig, config);\n\n    if (typeof this.config.container === 'string') {\n      this.container = document.querySelector(this.config.container);\n    } else {\n      this.container = this.config.container;\n    }\n\n    this.container.style.display = 'block';\n    this.container.style.position = 'absolute';\n    this.container.style.top = '0';\n    this.container.style.left = '0';\n    this.container.style.width = '100%';\n    this.container.style.height = '100%';\n\n    this._slides = this.config.slides;\n    this._currentSlideIndex = this._transitionToIndex = 0;\n    this._currentSlideRendered = false;\n    this._transitionProgress = 0;\n    this._imageMap = {};\n    this._videoMap = {};\n    this._slideContentMap = {};\n    this._ready = false;\n    this._destroyed = false;\n    this._playing = this.config.autoplay;\n    this._width = 0;\n    this._height = 0;\n\n    this._createCanvases();\n\n    this._resizeHandler = this.resize.bind(this);\n    window.addEventListener('resize', this._resizeHandler);\n\n    this._lastFrameTime = 0;\n    window.requestAnimationFrame(this._animate.bind(this));\n  }\n\n  goToSlide(index, direction) {\n    this._transitionToIndex = index;\n    this._transitionDirection = direction;\n\n    this._currentSlideRendered = false;\n\n    if (this._autoPlayTimeout) {\n      clearTimeout(this._autoPlayTimeout);\n    }\n  }\n\n  nextSlide() {\n    let index;\n\n    if (this._transitionToIndex === this._currentSlideIndex - 1 || (this._transitionToIndex === this._slides.length - 1 && this._currentSlideIndex === 0)) {\n      // Cancel and reverse the transition\n      index = this._currentSlideIndex;\n\n    } else {\n      index = this._currentSlideIndex === this._slides.length - 1 ? 0 : this._currentSlideIndex + 1;\n    }\n\n    this.goToSlide(index, TRANSITION_FORWARDS);\n  }\n\n  prevSlide() {\n    let index;\n\n    if (this._transitionToIndex === this._currentSlideIndex + 1 || (this._transitionToIndex === 0 && this._currentSlideIndex === this._slides.length - 1)) {\n      // Cancel and reverse the transition\n      index = this._currentSlideIndex;\n\n    } else {\n      index = this._currentSlideIndex === 0 ? this._slides.length - 1 : this._currentSlideIndex - 1;\n    }\n\n    this.goToSlide(index, TRANSITION_BACKWARDS);\n  }\n\n  play() {\n    this._playing = true;\n\n    this.nextSlide();\n  }\n\n  pause() {\n    this._playing = false;\n\n    if (this._autoPlayTimeout) {\n      clearTimeout(this._autoPlayTimeout);\n    }\n  }\n\n  destroy() {\n    this._playing = false;\n\n    this._destroyed = true;\n\n    window.removeEventListener('resize', this._resizeHandler);\n\n    _.forEach(this._videoMap, video => {\n      this.container.removeChild(video);\n      video = null;\n    });\n    this._videoMap = null;\n  }\n\n  _transitionEnded() {\n    // console.log('Transition Ended');\n  }\n\n  _videoEnded(video, videoObject) {\n    // console.log('Video Ended');\n\n    const slide = this._slides[this._transitionToIndex];\n\n    if (this._playing) {\n      if (slide.duration && _.isFunction(slide.duration)) {\n        let object = slide.duration();\n\n        if (object.type === 'video') {\n          this.nextSlide();\n        }\n      }\n    }\n  }\n\n  _slideLoaded(slide, slideIndex) {\n    // console.log('Slide Loaded');\n  }\n\n  _slideRendered() {\n    // console.log('Slide Rendered');\n\n    if (!this._ready) {\n      // Showy is ready for the first time\n      this._ready = true;\n      this.container.classList.add('showy--ready');\n    }\n\n    const slide = this._slides[this._transitionToIndex];\n\n    if (this._playing) {\n      let slideDuration = this.config.slideDuration;\n\n      if (slide.duration) {\n        if (_.isFunction(slide.duration)) {\n          let object = slide.duration();\n\n          if (object.type === 'video') {\n            return;\n          }\n        }\n\n        if (_.isNumber(slide.duration)) {\n          slideDuration = slide.duration;\n        }\n      }\n\n      this._autoPlayTimeout = setTimeout(() => {\n        this.nextSlide();\n      }, slideDuration);\n    }\n  }\n\n  _animate(frameTime) {\n    if (this._destroyed) {\n      return;\n    }\n\n    this._fps = 1000 / (frameTime - this._lastFrameTime);\n\n    try {\n      this._drawSlides();\n\n      window.requestAnimationFrame(this._animate.bind(this));\n\n    } catch (error) {\n      console.error(error);\n    }\n\n    this._lastFrameTime = frameTime;\n  }\n\n  _createCanvas() {\n    const canvas = document.createElement('canvas');\n    canvas.style.position = 'absolute';\n    canvas.style.width = '100%';\n    canvas.style.height = '100%';\n    this._resizeCanvas(canvas);\n    return canvas;\n  }\n\n  _createCanvases() {\n    this._currentCanvas = this._createCanvas();\n    this._currentContext = this._currentCanvas.getContext('2d');\n\n    this._nextCanvas = this._createCanvas();\n    this._nextContext = this._nextCanvas.getContext('2d');\n\n    this._prevCanvas = this._createCanvas();\n    this._prevContext = this._prevCanvas.getContext('2d');\n\n    this._renderCanvas = this._createCanvas();\n    this._renderContext = this._renderCanvas.getContext('webgl') || this._renderCanvas.getContext('experimental-webgl');\n    this._renderContext.pixelStorei(this._renderContext.UNPACK_FLIP_Y_WEBGL, true);\n\n    this.container.appendChild(this._renderCanvas);\n  }\n\n  _resizeCanvas(canvas) {\n    this._scale = window.devicePixelRatio;\n    this._width = this.container.clientWidth * this._scale;\n    this._height = this.container.clientHeight * this._scale;\n    canvas.width = this._width;\n    canvas.height = this._height;\n  }\n\n  resize() {\n    // Remove all cached imageData as this will be redundant now\n    this._slideContentMap = {};\n\n    this._resizeCanvas(this._currentCanvas);\n    this._resizeCanvas(this._nextCanvas);\n    this._resizeCanvas(this._prevCanvas);\n    this._resizeCanvas(this._renderCanvas);\n\n    this._drawSlides(true);\n  }\n\n  _clearContext(context) {\n    context.clearRect(0, 0, this._width, this._height);\n  }\n\n  _transitionInProgress() {\n    return this._transitionProgress > 0 && this._transitionProgress < 1;\n  }\n\n  _getTransition(currentSlideTransition = {}, nextPrevSlideTransition = {}) {\n    const _currentSlideTransition = _.merge({}, this.config.transition, currentSlideTransition || {});\n    const _nextPrevSlideTransition = _.merge({}, this.config.transition, nextPrevSlideTransition || {});\n    if (_currentSlideTransition.name === TRANSITION_RANDOM) {\n      _currentSlideTransition.glsl = _.sample(this.config.transitions);\n    } else {\n      _currentSlideTransition.glsl = this.config.transitions[_currentSlideTransition.name];\n    }\n    if (_nextPrevSlideTransition.name === TRANSITION_RANDOM) {\n      _nextPrevSlideTransition.glsl = _.sample(this.config.transitions);\n    } else {\n      _nextPrevSlideTransition.glsl = this.config.transitions[_nextPrevSlideTransition.name];\n    }\n    const transition = _currentSlideTransition.priority >= _nextPrevSlideTransition.priority ? _currentSlideTransition : _nextPrevSlideTransition;\n    return transition;\n  }\n\n  _drawSlides(reset) {\n    const currentSlide = this._slides[this._currentSlideIndex];\n    const nextSlide = this._slides[this._currentSlideIndex === this._slides.length - 1 ? 0 : this._currentSlideIndex + 1];\n    const prevSlide = this._slides[this._currentSlideIndex === 0 ? this._slides.length - 1 : this._currentSlideIndex - 1];\n\n    let transitionOptions;\n\n    // Rerender the current slide eg. if canvas has been resized\n    if (reset) {\n      currentSlide._rendered = false;\n    }\n\n    // Only render if we need to ie. only during transitions\n    // or if the current slide contains video(s)\n    if (!currentSlide._hasVideo &&\n      currentSlide._rendered &&\n      !this._transitionInProgress() &&\n      this._currentSlideIndex === this._transitionToIndex) {\n      return;\n    }\n\n    this._drawSlide(this._currentContext, currentSlide);\n    this._drawSlide(this._nextContext, nextSlide);\n    this._drawSlide(this._prevContext, prevSlide);\n\n    // Dispose of textures used in previous frame\n    if (this._fromTexture) {\n      this._fromTexture.dispose();\n    }\n    if (this._toTexture) {\n      this._toTexture.dispose();\n    }\n\n    // Transition is already running or has been triggered by a change of _transitionToIndex\n    if (this._transitionToIndex !== this._currentSlideIndex || this._transitionInProgress()) {\n      // We're heading to the next slide (or the transition has been cancelled halfway through)\n      if ((this._transitionToIndex !== this._currentSlideIndex && this._transitionDirection === TRANSITION_FORWARDS) ||\n        (this._transitionToIndex === this._currentSlideIndex && this._transitionDirection === TRANSITION_BACKWARDS)) {\n        this._fromTexture = createTexture(this._renderContext, this._currentCanvas);\n        this._toTexture = createTexture(this._renderContext, this._nextCanvas);\n        transitionOptions = this._getTransition(currentSlide.transitionNext, nextSlide.transitionPrev);\n      }\n      // We're heading to the previous slide (or the transition has been cancelled halfway through)\n      if ((this._transitionToIndex !== this._currentSlideIndex && this._transitionDirection === TRANSITION_BACKWARDS) ||\n        (this._transitionToIndex === this._currentSlideIndex && this._transitionDirection === TRANSITION_FORWARDS)) {\n        this._fromTexture = createTexture(this._renderContext, this._prevCanvas);\n        this._toTexture = createTexture(this._renderContext, this._currentCanvas);\n        transitionOptions = this._getTransition(currentSlide.transitionPrev, prevSlide.transitionNext);\n      }\n\n    } else {\n      // We're not transitioning so just rerender current slide (only if needed)\n      this._fromTexture = createTexture(this._renderContext, this._currentCanvas);\n      this._toTexture = this._fromTexture;\n    }\n\n    if (transitionOptions && !this._transitionInProgress() &&\n      (!this._transitionOptions || this._transitionOptions.name !== transitionOptions.name || this._transitionOptions.name === TRANSITION_RANDOM)) {\n      // Update transition options if required\n      this._transitionOptions = transitionOptions;\n\n      if (this._transition) {\n        // Destroy current transition in preparation to create a new one\n        this._transition.dispose();\n        this._transition = null;\n      }\n    }\n\n    if (this._transitionOptions) {\n      if (!this._transition) {\n        this._transition = createTransition(this._renderContext, this._transitionOptions.glsl.shader);\n      }\n\n      if (this._transitionToIndex !== this._currentSlideIndex || this._transitionInProgress()) {\n        // Increment the transition progress depending on the direction\n        const progressIncrement = 60 / this._transitionOptions.duration;\n\n        if (this._transitionDirection === TRANSITION_FORWARDS) {\n          this._transitionProgress = this._transitionInProgress() ? this._transitionProgress + progressIncrement : progressIncrement;\n        }\n        if (this._transitionDirection === TRANSITION_BACKWARDS) {\n          this._transitionProgress = this._transitionInProgress() ? this._transitionProgress - progressIncrement : 1 - progressIncrement;\n        }\n      }\n\n      // We've reached the end of the transition\n      if (this._transitionProgress > 1) {\n        this._transitionProgress = 1;\n      }\n      if (this._transitionProgress < 0) {\n        this._transitionProgress = 0;\n      }\n\n      const easedTransitionProgress = eases[this._transitionOptions.ease](this._transitionProgress);\n\n      this._transition.render(easedTransitionProgress, this._fromTexture, this._toTexture, this._transitionOptions.glsl.uniforms);\n\n    } else {\n      // No transition specified, just render\n      if (!this._transition) {\n        this._transition = createTransition(this._renderContext, TRANSITION_NONE_SHADER);\n      }\n\n      this._transition.render(1, this._fromTexture, this._toTexture);\n    }\n\n    // We have rendered the current slide for the first time\n    if (currentSlide._ready) {\n      currentSlide._rendered = true;\n\n      if (!this._currentSlideRendered) {\n        this._currentSlideRendered = true;\n\n        this._playSlideContent(this._transitionToIndex);\n\n        this._slideRendered();\n      }\n    }\n\n    // Transition is finished\n    if (this._transitionToIndex !== this._currentSlideIndex && !this._transitionInProgress()) {\n      this._currentSlideIndex = this._transitionToIndex;\n\n      this._clearContext(this._currentContext);\n      this._clearContext(this._nextContext);\n      this._clearContext(this._prevContext);\n\n      this._pauseSlideContent();\n\n      this._transitionEnded();\n    }\n  }\n\n  _drawSlide(context, slide) {\n    slide._hasVideo = slide.content.filter(object => object.type === 'video').length > 0;\n    slide._rendered = false;\n    slide._ready = false;\n    if (!slide._loaded) {\n      slide._loaded = false;\n    }\n\n    if (slide.background) {\n      context.fillStyle = slide.background;\n      context.fillRect(0, 0, this._width, this._height);\n    }\n\n    if (slide.content.length) {\n      this._drawSlideContent(context, slide, 0);\n    }\n  }\n\n  _drawSlideContent(context, slide, index) {\n    const object = slide.content[index];\n\n    if (!object) {\n      slide._ready = true;\n\n      if (!slide._loaded) {\n        slide._loaded = true;\n        this._slideLoaded(slide, this._slides.indexOf(slide));\n      }\n      return;\n    }\n\n    const callback = this._drawSlideContent.bind(this, context, slide, index + 1);\n\n    switch (object.type) {\n      case 'image':\n        this._drawImage(context, object, callback);\n        break;\n      case 'video':\n        this._drawVideo(context, object, callback);\n        break;\n      default:\n        throw new Error('Unknown content type');\n    }\n  }\n\n  _position2Pixels(position, scale = 1) {\n    const _pixels = [];\n\n    position.forEach((val, index) => {\n      let pixel;\n\n      let length = [this._width, this._height, this._width, this._height][index];\n\n      length /= scale;\n\n      if (val >= 0 && val <= 1) {\n        if (index < 2) {\n          pixel = val * length;\n        } else {\n          pixel = (val * length) - _pixels[index - 2];\n        }\n      } else {\n        if (index < 2) {\n          pixel = val;\n        } else {\n          pixel = length - _pixels[index - 2] - Math.abs(val);\n        }\n      }\n\n      _pixels.push(pixel);\n    });\n\n    const pixels = {\n      x: _pixels[0] * scale,\n      y: _pixels[1] * scale,\n      width: _pixels[2] * scale,\n      height: _pixels[3] * scale,\n    };\n\n    return pixels;\n  }\n\n  _updateCoords(src, dst, scaleMode) {\n    const srcRatio = src.width / src.height;\n    const dstRatio = dst.width / dst.height;\n\n    if (scaleMode && scaleMode === 'fill') {\n      if (srcRatio < dstRatio) {\n        const newHeight = dst.height * (src.width / dst.width);\n        src.y = src.y + ((src.height - newHeight) * 0.5);\n        src.height = newHeight;\n      }\n      if (srcRatio > dstRatio) {\n        const newWidth = dst.width * (src.height / dst.height);\n        src.x = src.x + ((src.width - newWidth) * 0.5);\n        src.width = newWidth;\n      }\n    } else {\n      if (srcRatio > dstRatio) {\n        const newHeight = dst.width * (src.height / src.width);\n        dst.y = dst.y + ((dst.height - newHeight) * 0.5);\n        dst.height = newHeight;\n      }\n      if (srcRatio < dstRatio) {\n        const newWidth = dst.height * srcRatio;\n        dst.x = dst.x + ((dst.width - newWidth) * 0.5);\n        dst.width = newWidth;\n      }\n    }\n\n    // Round properties for pica (and general speed up)\n    const roundProps = ['x', 'y', 'width', 'height'];\n\n    roundProps.forEach(prop => {\n      src[prop] = Math.round(src[prop]);\n      dst[prop] = Math.round(dst[prop]);\n    });\n\n    return {\n      src,\n      dst,\n    };\n  }\n\n  _getTile(dst, size) {\n    return {\n      x: dst.x,\n      y: dst.y,\n      width: size[0] <= 1 ? dst.width * size[0] : size[0],\n      height: size[1] <= 1 ? dst.height * size[1] : size[1],\n    };\n  }\n\n  _drawTiles(dst, tile, scaleMode, callback) {\n    let rows;\n    let columns;\n\n    let offsetWidth = 0;\n    let offsetHeight = 0;\n\n    if (scaleMode && scaleMode === 'fill') {\n      rows = Math.ceil(dst.height / tile.height);\n      columns = Math.ceil(dst.width / tile.width);\n\n      offsetWidth = ((tile.width * columns) - dst.width) * 0.5;\n      offsetHeight = ((tile.height * rows) - dst.height) * 0.5;\n\n    } else {\n      rows = Math.floor(dst.height / tile.height);\n      columns = Math.floor(dst.width / tile.width);\n    }\n\n    let row = 0;\n    let column = 0;\n\n    const totalTiles = rows * columns;\n\n    for (let i = 0; i < totalTiles; i++) {\n      callback({\n        x: (tile.x + (column * tile.width)) - offsetWidth,\n        y: (tile.y + (row * tile.height)) - offsetHeight,\n      });\n\n      if (column === columns - 1) {\n        row++;\n      }\n\n      column = column < columns - 1 ? column + 1 : 0;\n    }\n  }\n\n  _getImageData(image, x, y, width, height) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = image.naturalWidth;\n    tempCanvas.height = image.naturalHeight;\n    const tempContext = tempCanvas.getContext('2d');\n    tempContext.drawImage(image, 0, 0, image.naturalWidth, image.naturalHeight);\n    return tempContext.getImageData(x, y, width, height).data;\n  }\n\n  _getImage(imageUrl, callback) {\n    if (this._imageMap[imageUrl]) {\n      callback(this._imageMap[imageUrl]);\n      return;\n    }\n\n    const image = new Image();\n    image.crossOrigin = 'Anonymous';\n    image.src = imageUrl;\n    image.onerror = event => {\n      this.destroy();\n\n      throw new Error('Image failed to load', imageUrl);\n    };\n    image.onload = event => {\n      this._imageMap[imageUrl] = image;\n      callback(image);\n    };\n  }\n\n  _resizeImage(image, src, dst, callback) {\n    const resizedImageKey = JSON.stringify({\n      src: image.src,\n      dst,\n    });\n\n    if (this._slideContentMap[resizedImageKey]) {\n      callback(this._slideContentMap[resizedImageKey]);\n      return;\n    }\n\n    pica.resizeBuffer({\n      src: this._getImageData(image, src.x, src.y, src.width, src.height),\n      width: src.width,\n      height: src.height,\n      toWidth: dst.width,\n      toHeight: dst.height,\n      quality: 1,\n      alpha: false,\n      unsharpAmount: 0,\n      unsharpRadius: 0.5,\n      unsharpThreshold: 0,\n    }, (error, buffer) => {\n      if (error) {\n        console.error(error);\n        return;\n      }\n\n      if (buffer.length) {\n        this._resizedImageData = new ImageData(new Uint8ClampedArray(buffer), dst.width, dst.height);\n\n        this._slideContentMap[resizedImageKey] = this._resizedImageData;\n\n        callback(this._slideContentMap[resizedImageKey]);\n\n        return;\n      }\n\n      console.error(new Error('Resize failed'), image.src, src, dst);\n    });\n  }\n\n  _drawImage(context, object, callback) {\n    this._getImage(object.url, image => {\n      let src = {\n        x: 0,\n        y: 0,\n        width: image.naturalWidth,\n        height: image.naturalHeight,\n      };\n\n      let dst = this._position2Pixels(object.position, this._scale);\n\n      if (object.tile) {\n        let tile = this._getTile(dst, object.tile.size);\n\n        const updatedCoords = this._updateCoords(src, tile, object.tile.scaleMode);\n\n        this._resizeImage(image, updatedCoords.src, updatedCoords.dst, resizedImageData => {\n\n          this._drawTiles(dst, updatedCoords.dst, object.scaleMode, tileCoord => {\n            context.putImageData(resizedImageData, tileCoord.x, tileCoord.y);\n          });\n\n          callback();\n        });\n\n        return;\n      }\n\n      const updatedCoords = this._updateCoords(src, dst, object.scaleMode);\n\n      src = updatedCoords.src;\n      dst = updatedCoords.dst;\n\n      this._resizeImage(image, src, dst, resizedImageData => {\n        context.putImageData(resizedImageData, dst.x, dst.y);\n\n        callback();\n      });\n    });\n  }\n\n  _getVideoData(video) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = video.videoWidth;\n    tempCanvas.height = video.videoHeight;\n    const tempContext = tempCanvas.getContext('2d');\n    tempContext.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n    return tempContext._getImageData(0, 0, video.videoWidth, video.videoHeight).data;\n  }\n\n  _getVideo(object, callback = () => {}) {\n    const videoKey = JSON.stringify(object.sources);\n\n    if (this._videoMap[videoKey]) {\n      callback(this._videoMap[videoKey]);\n\n      return this._videoMap[videoKey];\n    }\n\n    const video = document.createElement('video');\n    video.style.display = 'none';\n    video.crossOrigin = 'anonymous';\n    video.muted = true;\n    this.container.appendChild(video);\n\n    object.sources.forEach(source => {\n      const _source = document.createElement('source');\n      _source.src = source.url;\n      _source.type = source.type;\n      _source.crossOrigin = 'anonymous';\n      video.appendChild(_source);\n    });\n\n    this._videoMap[videoKey] = video;\n\n    video.addEventListener('loadedmetadata', () => {\n      callback(video);\n    });\n\n    video._playCount = 0;\n\n    video.addEventListener('ended', () => {\n      video.play();\n\n      video._playCount += 1;\n\n      this._videoEnded(video, object);\n    });\n\n    return video;\n  }\n\n  _drawVideo(context, object, callback) {\n    this._getVideo(object, video => {\n      if (video.videoWidth === 0 || video.videoHeight === 0) {\n        return;\n      }\n\n      let src = {\n        x: 0,\n        y: 0,\n        width: video.videoWidth,\n        height: video.videoHeight,\n      };\n\n      let dst = this._position2Pixels(object.position, this._scale);\n\n      if (object.tile) {\n        let tile = this._getTile(dst, object.tile.size);\n\n        const updatedCoords = this._updateCoords(src, tile, object.tile.scaleMode);\n\n        this._drawTiles(dst, updatedCoords.dst, object.scaleMode, tileCoord => {\n          context.drawImage(video, src.x, src.y, src.width, src.height, tileCoord.x, tileCoord.y, tile.width, tile.height);\n        });\n\n        callback();\n\n        return;\n      }\n\n      const updatedCoords = this._updateCoords(src, dst, object.scaleMode);\n\n      src = updatedCoords.src;\n      dst = updatedCoords.dst;\n\n      context.drawImage(video, src.x, src.y, src.width, src.height, dst.x, dst.y, dst.width, dst.height);\n\n      callback();\n    });\n  }\n\n  _playSlideContent(index) {\n    this._slides[index].content.forEach(object => {\n      if (object.type === 'video') {\n        this._getVideo(object, video => {\n          video._playCount = 0;\n          video.currentTime = 0;\n          video.play();\n        });\n      }\n    });\n  }\n\n  _pauseSlideContent() {\n    const currentSlideVideos = [];\n\n    this._slides[this._currentSlideIndex].content.forEach(object => {\n      if (object.type === 'video') {\n        currentSlideVideos.push(this._getVideo(object));\n      }\n    });\n\n    this._slides.forEach((slide, index) => {\n      if (index === this._currentSlideIndex) {\n        return;\n      }\n\n      slide.content.forEach(object => {\n        if (object.type === 'video') {\n          this._getVideo(object, video => {\n            if (currentSlideVideos.indexOf(video) === -1) {\n              video._playCount = 0;\n              video.currentTime = 0;\n              video.pause();\n            }\n          });\n        }\n      });\n    });\n  }\n}\n\nexport default Showy;\n","const transitions = {\n  none: {\n    shader: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      void main() {\n        vec2 p = gl_FragCoord.xy / resolution.xy;\n        gl_FragColor = texture2D(to, p);\n      }\n    `,\n    uniforms: {},\n  },\n  crossfade: {\n    shader: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      void main() {\n        vec2 p = gl_FragCoord.xy / resolution.xy;\n        gl_FragColor = mix(texture2D(from, p), texture2D(to, p), progress);\n      }\n    `,\n    uniforms: {},\n  },\n  wipeUp: {\n    shader: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      void main() {\n        vec2 p = gl_FragCoord.xy / resolution.xy;\n        vec4 a = texture2D(from, p);\n        vec4 b = texture2D(to, p);\n        gl_FragColor = mix(a, b, step(0.0 + p.y, progress));\n      }\n    `,\n    uniforms: {},\n  },\n  wipeDown: {\n    shader: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      void main() {\n        vec2 p = gl_FragCoord.xy / resolution.xy;\n        vec4 a = texture2D(from, p);\n        vec4 b = texture2D(to, p);\n        gl_FragColor = mix(a, b, step(1.0 - p.y, progress));\n      }\n    `,\n    uniforms: {},\n  },\n  wipeRight: {\n    shader: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      void main() {\n        vec2 p = gl_FragCoord.xy / resolution.xy;\n        vec4 a = texture2D(from, p);\n        vec4 b = texture2D(to, p);\n        gl_FragColor = mix(a, b, step(0.0 + p.x, progress));\n      }\n    `,\n    uniforms: {},\n  },\n  wipeLeft: {\n    shader: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      void main() {\n        vec2 p = gl_FragCoord.xy / resolution.xy;\n        vec4 a = texture2D(from, p);\n        vec4 b = texture2D(to, p);\n        gl_FragColor = mix(a, b, step(1.0 - p.x, progress));\n      }\n    `,\n    uniforms: {},\n  },\n  circle: {\n    shader: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      uniform float centerX;\n      uniform float centerY;\n      uniform float smoothness;\n      uniform bool grow;\n\n      vec2 center = vec2(centerX, 1.0 - centerY);\n      float scale = sqrt(min(resolution[0] / resolution[1], resolution[1] / resolution[0]) / max(centerX, 1.0 - centerY));\n\n      void main() {\n        vec2 p = gl_FragCoord.xy / resolution.xy;\n        float size = grow ? progress : 1.0 - progress;\n        float dist = distance(center, p);\n        float circle = smoothstep(-smoothness, 0.0, scale * dist - size * (1.0 + smoothness));\n        gl_FragColor = mix(texture2D(from, p), texture2D(to, p), grow ? 1.0 - circle : circle);\n      }\n    `,\n    uniforms: {\n      centerX: 0.5,\n      centerY: 0.5,\n      smoothness: 0,\n      grow: true,\n    },\n  },\n  circleInOut: {\n    shader: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      float maxRadius = resolution.x + resolution.y;\n\n      void main() {\n        vec2 p = gl_FragCoord.xy / resolution.xy;\n\n        float distX = gl_FragCoord.x - resolution.x / 2.0;\n        float distY = gl_FragCoord.y - resolution.y / 2.0;\n        float dist = sqrt(distX * distX + distY * distY);\n\n        float step = 2.0 * abs(progress - 0.5);\n        step = step * step * step;\n\n        if (dist < step * maxRadius)\n        {\n          if (progress < 0.5)\n            gl_FragColor = texture2D(from, p);\n          else\n            gl_FragColor = texture2D(to, p);\n        }\n        else\n          gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n      }\n    `,\n    uniforms: {},\n  },\n  splitVertical: {\n    shader: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n\n      // General parameters\n      uniform sampler2D from;\n      uniform sampler2D to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      uniform float reflection;\n      uniform float perspective;\n      uniform float depth;\n\n      const vec4 black = vec4(0.0, 0.0, 0.0, 1.0);\n      const vec2 boundMin = vec2(0.0, 0.0);\n      const vec2 boundMax = vec2(1.0, 1.0);\n\n      bool inBounds (vec2 p) {\n        return all(lessThan(boundMin, p)) && all(lessThan(p, boundMax));\n      }\n\n      vec2 project (vec2 p) {\n        return p * vec2(1.0, -1.2) + vec2(0.0, -0.02);\n      }\n\n      vec4 bgColor (vec2 p, vec2 pto) {\n        vec4 c = black;\n        pto = project(pto);\n        if (inBounds(pto)) {\n          c += mix(black, texture2D(to, pto), reflection * mix(1.0, 0.0, pto.y));\n        }\n        return c;\n      }\n\n      void main() {\n        vec2 p = gl_FragCoord.xy / resolution.xy;\n\n        vec2 pfr = vec2(-1.), pto = vec2(-1.);\n\n        float middleSlit = 2.0 * abs(p.x-0.5) - progress;\n        if (middleSlit > 0.0) {\n          pfr = p + (p.x > 0.5 ? -1.0 : 1.0) * vec2(0.5*progress, 0.0);\n          float d = 1.0/(1.0+perspective*progress*(1.0-middleSlit));\n          pfr.y -= d/2.;\n          pfr.y *= d;\n          pfr.y += d/2.;\n        }\n\n        float size = mix(1.0, depth, 1.-progress);\n        pto = (p + vec2(-0.5, -0.5)) * vec2(size, size) + vec2(0.5, 0.5);\n\n        if (inBounds(pfr)) {\n          gl_FragColor = texture2D(from, pfr);\n        }\n        else if (inBounds(pto)) {\n          gl_FragColor = texture2D(to, pto);\n        }\n        else {\n          gl_FragColor = bgColor(p, pto);\n        }\n      }\n    `,\n    uniforms: {\n      reflection: 0,\n      perspective: 0,\n      depth: 1,\n    },\n  },\n  slideUp: {\n    shader: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      uniform float translateX;\n      uniform float translateY;\n\n      void main() {\n          vec2 texCoord = gl_FragCoord.xy / resolution.xy;\n          float x = progress * translateX;\n          float y = progress * translateY;\n\n          if (x >= 0.0 && y >= 0.0) {\n              if (texCoord.x >= x && texCoord.y >= y) {\n                  gl_FragColor = texture2D(from, texCoord - vec2(x, y));\n              }\n              else {\n                  vec2 uv;\n                  if (x > 0.0)\n                      uv = vec2(x - 1.0, y);\n                  else if (y > 0.0)\n                      uv = vec2(x, y - 1.0);\n                  gl_FragColor = texture2D(to, texCoord - uv);\n              }\n          }\n          else if (x <= 0.0 && y <= 0.0) {\n              if (texCoord.x <= (1.0 + x) && texCoord.y <= (1.0 + y))\n                  gl_FragColor = texture2D(from, texCoord - vec2(x, y));\n              else {\n                  vec2 uv;\n                  if (x < 0.0)\n                      uv = vec2(x + 1.0, y);\n                  else if (y < 0.0)\n                      uv = vec2(x, y + 1.0);\n                  gl_FragColor = texture2D(to, texCoord - uv);\n              }\n          }\n          else\n              gl_FragColor = vec4(0.0);\n      }\n    `,\n    uniforms: {\n      translateX: 0,\n      translateY: 1,\n    },\n  },\n  slideDown: {\n    shader: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      uniform float translateX;\n      uniform float translateY;\n\n      void main() {\n          vec2 texCoord = gl_FragCoord.xy / resolution.xy;\n          float x = progress * translateX;\n          float y = progress * translateY;\n\n          if (x >= 0.0 && y >= 0.0) {\n              if (texCoord.x >= x && texCoord.y >= y) {\n                  gl_FragColor = texture2D(from, texCoord - vec2(x, y));\n              }\n              else {\n                  vec2 uv;\n                  if (x > 0.0)\n                      uv = vec2(x - 1.0, y);\n                  else if (y > 0.0)\n                      uv = vec2(x, y - 1.0);\n                  gl_FragColor = texture2D(to, texCoord - uv);\n              }\n          }\n          else if (x <= 0.0 && y <= 0.0) {\n              if (texCoord.x <= (1.0 + x) && texCoord.y <= (1.0 + y))\n                  gl_FragColor = texture2D(from, texCoord - vec2(x, y));\n              else {\n                  vec2 uv;\n                  if (x < 0.0)\n                      uv = vec2(x + 1.0, y);\n                  else if (y < 0.0)\n                      uv = vec2(x, y + 1.0);\n                  gl_FragColor = texture2D(to, texCoord - uv);\n              }\n          }\n          else\n              gl_FragColor = vec4(0.0);\n      }\n    `,\n    uniforms: {\n      translateX: 0,\n      translateY: -1,\n    },\n  },\n  slideLeft: {\n    shader: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      uniform float translateX;\n      uniform float translateY;\n\n      void main() {\n          vec2 texCoord = gl_FragCoord.xy / resolution.xy;\n          float x = progress * translateX;\n          float y = progress * translateY;\n\n          if (x >= 0.0 && y >= 0.0) {\n              if (texCoord.x >= x && texCoord.y >= y) {\n                  gl_FragColor = texture2D(from, texCoord - vec2(x, y));\n              }\n              else {\n                  vec2 uv;\n                  if (x > 0.0)\n                      uv = vec2(x - 1.0, y);\n                  else if (y > 0.0)\n                      uv = vec2(x, y - 1.0);\n                  gl_FragColor = texture2D(to, texCoord - uv);\n              }\n          }\n          else if (x <= 0.0 && y <= 0.0) {\n              if (texCoord.x <= (1.0 + x) && texCoord.y <= (1.0 + y))\n                  gl_FragColor = texture2D(from, texCoord - vec2(x, y));\n              else {\n                  vec2 uv;\n                  if (x < 0.0)\n                      uv = vec2(x + 1.0, y);\n                  else if (y < 0.0)\n                      uv = vec2(x, y + 1.0);\n                  gl_FragColor = texture2D(to, texCoord - uv);\n              }\n          }\n          else\n              gl_FragColor = vec4(0.0);\n      }\n    `,\n    uniforms: {\n      translateX: 1,\n      translateY: 0,\n    },\n  },\n  slideRight: {\n    shader: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      uniform float translateX;\n      uniform float translateY;\n\n      void main() {\n          vec2 texCoord = gl_FragCoord.xy / resolution.xy;\n          float x = progress * translateX;\n          float y = progress * translateY;\n\n          if (x >= 0.0 && y >= 0.0) {\n              if (texCoord.x >= x && texCoord.y >= y) {\n                  gl_FragColor = texture2D(from, texCoord - vec2(x, y));\n              }\n              else {\n                  vec2 uv;\n                  if (x > 0.0)\n                      uv = vec2(x - 1.0, y);\n                  else if (y > 0.0)\n                      uv = vec2(x, y - 1.0);\n                  gl_FragColor = texture2D(to, texCoord - uv);\n              }\n          }\n          else if (x <= 0.0 && y <= 0.0) {\n              if (texCoord.x <= (1.0 + x) && texCoord.y <= (1.0 + y))\n                  gl_FragColor = texture2D(from, texCoord - vec2(x, y));\n              else {\n                  vec2 uv;\n                  if (x < 0.0)\n                      uv = vec2(x + 1.0, y);\n                  else if (y < 0.0)\n                      uv = vec2(x, y + 1.0);\n                  gl_FragColor = texture2D(to, texCoord - uv);\n              }\n          }\n          else\n              gl_FragColor = vec4(0.0);\n      }\n    `,\n    uniforms: {\n      translateX: -1,\n      translateY: 0,\n    },\n  },\n};\n\nexport default transitions;\n"]}