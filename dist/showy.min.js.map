{"version":3,"file":"generated.js","sources":["node_modules/browser-pack/_prelude.js","showy.browserify.js","src/showy.js","src/transitions.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"window","Showy","_transitions","TRANSITION_FORWARDS","TRANSITION_BACKWARDS","TRANSITION_RANDOM","Object","defineProperty","HTMLMediaElement","prototype","get","this","currentTime","paused","ended","readyState","config","_classCallCheck","defaultConfig","container","slides","transitions","_transitions2","autoplay","slideDuration","transition","name","duration","ease","priority","_","merge","document","querySelector","_slides","_currentSlideIndex","_transitionToIndex","_currentSlideRendered","_transitionProgress","_imageMap","_videoMap","_slideContentMap","_ready","_destroyed","_playing","_createCanvases","_getTransition","_resizeHandler","resize","bind","addEventListener","_lastFrameTime","requestAnimationFrame","_animate","index","direction","_transitionDirection","_playSlideContent","_autoPlayTimeout","clearTimeout","goToSlide","nextSlide","removeEventListener","video","removeChild","slide","isFunction","object","type","_this","classList","add","isNumber","setTimeout","frameTime","_fps","_drawSlides","error","console","stack","canvas","createElement","style","position","width","height","_resizeCanvas","_currentCanvas","_createCanvas","_currentContext","getContext","_nextCanvas","_nextContext","_prevCanvas","_prevContext","_renderCanvas","_renderContext","pixelStorei","UNPACK_FLIP_Y_WEBGL","appendChild","_scale","devicePixelRatio","clientWidth","clientHeight","context","clearRect","currentSlideTransition","arguments","undefined","nextPrevSlideTransition","_currentSlideTransition","_nextPrevSlideTransition","shader","sample","reset","currentSlide","prevSlide","_rendered","_hasVideo","_transitionInProgress","_drawSlide","_fromTexture","dispose","_toTexture","createTexture","transitionNext","transitionPrev","progressIncrement","_transition","createTransition","glsl","easedTransitionProgress","eases","render","uniforms","_slideRendered","_clearContext","_pauseSlideContent","_transitionEnded","content","filter","_loaded","background","fillStyle","fillRect","_drawSlideContent","_slideLoaded","indexOf","callback","_drawImage","_drawVideo","_this2","scale","pixels","forEach","val","pixel","push","x","y","src","dst","scaleMode","srcRatio","dstRatio","newHeight","newWidth","_newHeight","_newWidth","roundProps","prop","Math","round","size","tile","rows","columns","offsetWidth","offsetHeight","ceil","floor","row","column","totalTiles","image","tempCanvas","naturalWidth","naturalHeight","tempContext","drawImage","getImageData","data","imageUrl","_this3","Image","crossOrigin","onload","_this4","resizedImageKey","JSON","stringify","pica","resizeBuffer","_getImageData","toWidth","toHeight","quality","alpha","unsharpAmount","unsharpRadius","unsharpThreshold","buffer","resizedImageData","ImageData","Uint8ClampedArray","_this5","_getImage","url","_position2Pixels","_ret","_getTile","updatedCoords","_updateCoords","_resizeImage","_drawTiles","tileCoord","putImageData","v","_typeof","videoWidth","videoHeight","_this6","videoKey","sources","display","muted","source","_source","_playCount","play","_videoEnded","_this7","_getVideo","_ret2","_this8","_this9","currentSlideVideos","pause","wipeUp","wipeDown","wipeRight","wipeLeft","circle","centerX","centerY","smoothness","grow","circleInOut","splitVertical","reflection","perspective","depth","slideUp","translateX","translateY","slideDown","slideLeft","slideRight"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","window.Showy = require('./src/showy').default;\n","/**\n * TODO\n * - events (ready, progress etc)\n * - cache video frames (assume frame rate and round currentTime to get frame)\n * - video options (loop?)\n * - fallback for no-video / autoplay on mobile\n * - effects/filters (sepia / grayscale etc)\n * - fallback for no-webgl (use gsap?)\n */\n\nimport transitions from './transitions';\n\nconst TRANSITION_FORWARDS = 'forwards';\nconst TRANSITION_BACKWARDS = 'backwards';\nconst TRANSITION_RANDOM = 'random';\n\n// Polyfill playing status\nObject.defineProperty(HTMLMediaElement.prototype, 'playing', {\n  get: function () {\n    return !!(this.currentTime > 0 && !this.paused && !this.ended && this.readyState > 2);\n  },\n});\n\nclass Showy {\n  constructor(config) {\n    const defaultConfig = {\n      container: 'body',\n      slides: [],\n      transitions,\n      autoplay: false,\n      slideDuration: 3000,\n      transition: {\n        name: 'random',\n        duration: 2000,\n        ease: 'linear',\n        priority: 0,\n      },\n    };\n\n    this.config = _.merge({}, defaultConfig, config);\n\n    if (typeof this.config.container === 'string') {\n      this.container = document.querySelector(this.config.container);\n    } else {\n      this.container = this.config.container;\n    }\n\n    this._slides = this.config.slides;\n    this._currentSlideIndex = this._transitionToIndex = 0;\n    this._currentSlideRendered = false;\n    this._transitionProgress = 0;\n    this._imageMap = {};\n    this._videoMap = {};\n    this._slideContentMap = {};\n    this._ready = false;\n    this._destroyed = false;\n    this._playing = this.config.autoplay;\n\n    this._createCanvases();\n\n    this.transition = this._getTransition();\n\n    this._resizeHandler = this.resize.bind(this);\n    window.addEventListener('resize', this._resizeHandler);\n\n    this._lastFrameTime = 0;\n    window.requestAnimationFrame(this._animate.bind(this));\n  }\n\n  goToSlide(index, direction) {\n    this._transitionToIndex = index;\n    this._transitionDirection = direction;\n\n    this._currentSlideRendered = false;\n\n    this._playSlideContent(this._transitionToIndex);\n\n    if (this._autoPlayTimeout) {\n      clearTimeout(this._autoPlayTimeout);\n    }\n  }\n\n  nextSlide() {\n    if (this._transitionToIndex === this._currentSlideIndex - 1 || (this._transitionToIndex === this._slides.length - 1 && this._currentSlideIndex === 0)) {\n      // Cancel and reverse the transition\n      this.goToSlide(this._currentSlideIndex, TRANSITION_FORWARDS);\n\n    } else {\n      this.goToSlide(this._currentSlideIndex === this._slides.length - 1 ? 0 : this._currentSlideIndex + 1, TRANSITION_FORWARDS);\n    }\n  }\n\n  prevSlide() {\n    if (this._transitionToIndex === this._currentSlideIndex + 1 || (this._transitionToIndex === 0 && this._currentSlideIndex === this._slides.length - 1)) {\n      // Cancel and reverse the transition\n      this.goToSlide(this._currentSlideIndex, TRANSITION_BACKWARDS);\n\n    } else {\n      this.goToSlide(this._currentSlideIndex === 0 ? this._slides.length - 1 : this._currentSlideIndex - 1, TRANSITION_BACKWARDS);\n    }\n  }\n\n  play() {\n    this._playing = true;\n\n    this.nextSlide();\n  }\n\n  pause() {\n    this._playing = false;\n\n    if (this._autoPlayTimeout) {\n      clearTimeout(this._autoPlayTimeout);\n    }\n  }\n\n  destroy() {\n    this._destroyed = true;\n\n    window.removeEventListener('resize', this._resizeHandler);\n\n    for (let i in this._videoMap) {\n      let video = this._videoMap[i];\n      this.container.removeChild(video);\n      video = null;\n    }\n    this._videoMap = null;\n  }\n\n  _transitionEnded() {\n    // console.log('Transition Ended', this._currentSlideIndex, this._slides[this._currentSlideIndex]);\n  }\n\n  _videoEnded(video, videoObject) {\n    // console.log('Video Ended', video._playCount, videoObject);\n\n    const slide = this._slides[this._transitionToIndex];\n\n    if (this._playing) {\n      if (slide.duration && _.isFunction(slide.duration)) {\n        let object = slide.duration();\n\n        if (object.type === 'video') {\n          this.nextSlide();\n        }\n      }\n    }\n  }\n\n  _slideLoaded(slide, slideIndex) {\n    // console.log('Slide Loaded', slideIndex, slide);\n  }\n\n  _slideRendered() {\n    // console.log('Slide Rendered', this._transitionToIndex, this._slides[this._transitionToIndex]);\n\n    if (!this._ready) {\n      this._ready = true;\n      this.container.classList.add('ready');\n    }\n\n    const slide = this._slides[this._transitionToIndex];\n\n    if (this._playing) {\n      let slideDuration = this.config.slideDuration;\n\n      if (slide.duration) {\n        if (_.isFunction(slide.duration)) {\n          let object = slide.duration();\n\n          if (object.type === 'video') {\n            return;\n          }\n        }\n\n        if (_.isNumber(slide.duration)) {\n          slideDuration = slide.duration;\n        }\n      }\n\n      this._autoPlayTimeout = setTimeout(() => {\n        this.nextSlide();\n      }, slideDuration);\n    }\n  }\n\n  _animate(frameTime) {\n    if (this._destroyed) {\n      return;\n    }\n\n    this._fps = 1000 / (frameTime - this._lastFrameTime);\n\n    try {\n      this._drawSlides();\n\n      window.requestAnimationFrame(this._animate.bind(this));\n\n    } catch (error) {\n      console.error(error.stack);\n    }\n\n    this._lastFrameTime = frameTime;\n  }\n\n  _createCanvas() {\n    const canvas = document.createElement('canvas');\n    canvas.style.position = 'absolute';\n    canvas.style.width = '100%';\n    canvas.style.height = '100%';\n    this._resizeCanvas(canvas);\n    return canvas;\n  }\n\n  _createCanvases() {\n    this._currentCanvas = this._createCanvas();\n    this._currentContext = this._currentCanvas.getContext('2d');\n\n    this._nextCanvas = this._createCanvas();\n    this._nextContext = this._nextCanvas.getContext('2d');\n\n    this._prevCanvas = this._createCanvas();\n    this._prevContext = this._prevCanvas.getContext('2d');\n\n    this._renderCanvas = this._createCanvas();\n    this._renderContext = this._renderCanvas.getContext('webgl') || this._renderCanvas.getContext('experimental-webgl');\n    this._renderContext.pixelStorei(this._renderContext.UNPACK_FLIP_Y_WEBGL, true);\n\n    this.container.appendChild(this._renderCanvas);\n  }\n\n  _resizeCanvas(canvas) {\n    this._scale = window.devicePixelRatio;\n    canvas.width = this.container.clientWidth * this._scale;\n    canvas.height = this.container.clientHeight * this._scale;\n  }\n\n  resize() {\n    // Remove all cached imageData as this will be redundant now\n    this._slideContentMap = {};\n\n    this._resizeCanvas(this._currentCanvas);\n    this._resizeCanvas(this._nextCanvas);\n    this._resizeCanvas(this._prevCanvas);\n    this._resizeCanvas(this._renderCanvas);\n\n    this._drawSlides(true);\n  }\n\n  _clearContext(context) {\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n  }\n\n  _transitionInProgress() {\n    return this._transitionProgress > 0 && this._transitionProgress < 1;\n  }\n\n  _getTransition(currentSlideTransition = {}, nextPrevSlideTransition = {}) {\n    const _currentSlideTransition = _.merge({}, this.config.transition, currentSlideTransition || {});\n    const _nextPrevSlideTransition = _.merge({}, this.config.transition, nextPrevSlideTransition || {});\n    if (_currentSlideTransition.name === TRANSITION_RANDOM) {\n      _currentSlideTransition.shader = _.sample(this.config.transitions);\n    } else {\n      _currentSlideTransition.shader = this.config.transitions[_currentSlideTransition.name];\n    }\n    if (_nextPrevSlideTransition.name === TRANSITION_RANDOM) {\n      _nextPrevSlideTransition.shader = _.sample(this.config.transitions);\n    } else {\n      _nextPrevSlideTransition.shader = this.config.transitions[_nextPrevSlideTransition.name];\n    }\n    return _currentSlideTransition.priority >= _nextPrevSlideTransition.priority ? _currentSlideTransition : _nextPrevSlideTransition;\n  }\n\n  _drawSlides(reset) {\n    const currentSlide = this._slides[this._currentSlideIndex];\n    const nextSlide = this._slides[this._currentSlideIndex === this._slides.length - 1 ? 0 : this._currentSlideIndex + 1];\n    const prevSlide = this._slides[this._currentSlideIndex === 0 ? this._slides.length - 1 : this._currentSlideIndex - 1];\n\n    let transition;\n\n    // Rerender the current slide eg. if canvas has been resized\n    if (reset) {\n      currentSlide._rendered = false;\n    }\n\n    // Only render if we need to ie. only during transitions\n    // or if the current slide contains video(s)\n    if (!currentSlide._hasVideo &&\n      currentSlide._rendered &&\n      !this._transitionInProgress() &&\n      this._currentSlideIndex === this._transitionToIndex) {\n      return;\n    }\n\n    this._drawSlide(this._currentContext, currentSlide);\n    this._drawSlide(this._nextContext, nextSlide);\n    this._drawSlide(this._prevContext, prevSlide);\n\n    if (this._fromTexture) {\n      this._fromTexture.dispose();\n    }\n\n    if (this._toTexture) {\n      this._toTexture.dispose();\n    }\n\n    // Transition is already running or has been triggered by a change of _transitionToIndex\n    if (this._transitionToIndex !== this._currentSlideIndex || this._transitionInProgress()) {\n      // We're heading to the next slide (or the transition has been cancelled halfway through)\n      if ((this._transitionToIndex !== this._currentSlideIndex && this._transitionDirection === TRANSITION_FORWARDS) ||\n        (this._transitionToIndex === this._currentSlideIndex && this._transitionDirection === TRANSITION_BACKWARDS)) {\n        this._fromTexture = createTexture(this._renderContext, this._currentCanvas);\n        this._toTexture = createTexture(this._renderContext, this._nextCanvas);\n        transition = this._getTransition(currentSlide.transitionNext, nextSlide.transitionPrev);\n      }\n      // We're heading to the previous slide (or the transition has been cancelled halfway through)\n      if ((this._transitionToIndex !== this._currentSlideIndex && this._transitionDirection === TRANSITION_BACKWARDS) ||\n        (this._transitionToIndex === this._currentSlideIndex && this._transitionDirection === TRANSITION_FORWARDS)) {\n        this._fromTexture = createTexture(this._renderContext, this._prevCanvas);\n        this._toTexture = createTexture(this._renderContext, this._currentCanvas);\n        transition = this._getTransition(currentSlide.transitionPrev, prevSlide.transitionNext);\n      }\n\n      // console.log(this._fps);\n      const progressIncrement = 60 / transition.duration;\n\n      // Increment the transition progress depending on the direction\n      if (this._transitionDirection === TRANSITION_FORWARDS) {\n        this._transitionProgress = this._transitionInProgress() ? this._transitionProgress + progressIncrement : progressIncrement;\n      }\n      if (this._transitionDirection === TRANSITION_BACKWARDS) {\n        this._transitionProgress = this._transitionInProgress() ? this._transitionProgress - progressIncrement : 1 - progressIncrement;\n      }\n\n      // We've reached the end of the transition\n      if (this._transitionProgress > 1) {\n        this._transitionProgress = 1;\n      }\n      if (this._transitionProgress < 0) {\n        this._transitionProgress = 0;\n      }\n\n    } else {\n      // We're not transitioning so just rerender current slide (only if needed)\n      this._fromTexture = createTexture(this._renderContext, this._currentCanvas);\n      this._toTexture = this._fromTexture;\n    }\n\n    if (transition && !this._transitionInProgress() && (this.transition.name !== transition.name || this.transition.name === TRANSITION_RANDOM)) {\n      this.transition = transition;\n      if (this._transition) {\n        this._transition.dispose();\n        this._transition = null;\n      }\n    }\n\n    if (!this._transition) {\n      this._transition = createTransition(this._renderContext, this.transition.shader.glsl);\n    }\n\n    const easedTransitionProgress = eases[this.transition.ease](this._transitionProgress);\n\n    this._transition.render(easedTransitionProgress, this._fromTexture, this._toTexture, this.transition.shader.uniforms);\n\n    // We have rendered the current slide for the first time\n    if (currentSlide._ready) {\n      currentSlide._rendered = true;\n\n      if (!this._currentSlideRendered) {\n        this._currentSlideRendered = true;\n        this._slideRendered();\n      }\n    }\n\n    // Transition is finished\n    if (this._transitionToIndex !== this._currentSlideIndex && !this._transitionInProgress()) {\n      this._currentSlideIndex = this._transitionToIndex;\n\n      this._clearContext(this._currentContext);\n      this._clearContext(this._nextContext);\n      this._clearContext(this._prevContext);\n\n      this._pauseSlideContent();\n\n      this._transitionEnded();\n    }\n  }\n\n  _drawSlide(context, slide) {\n    slide._hasVideo = slide.content.filter(object => object.type === 'video').length > 0;\n    slide._rendered = false;\n    slide._ready = false;\n    if (!slide._loaded) {\n      slide._loaded = false;\n    }\n\n    if (slide.background) {\n      context.fillStyle = slide.background;\n      context.fillRect(0, 0, context.canvas.width, context.canvas.height);\n    }\n\n    if (slide.content.length) {\n      this._drawSlideContent(context, slide, 0);\n    }\n  }\n\n  _drawSlideContent(context, slide, index) {\n    const object = slide.content[index];\n\n    if (!object) {\n      slide._ready = true;\n\n      if (!slide._loaded) {\n        slide._loaded = true;\n        this._slideLoaded(slide, this._slides.indexOf(slide));\n      }\n      return;\n    }\n\n    const callback = this._drawSlideContent.bind(this, context, slide, index + 1);\n\n    switch (object.type) {\n      case 'image':\n        this._drawImage(context, object, callback);\n        break;\n      case 'video':\n        this._drawVideo(context, object, callback);\n        break;\n      default:\n        throw new Error('Unknown content type');\n    }\n  }\n\n  _position2Pixels(position, scale = 1) {\n    const pixels = [];\n\n    position.forEach((val, index) => {\n      let pixel;\n\n      let length = [this._currentCanvas.width, this._currentCanvas.height, this._currentCanvas.width, this._currentCanvas.height][index];\n\n      length /= scale;\n\n      if (val <= 1) {\n        if (index < 2) {\n          pixel = val * length;\n        } else {\n          pixel = (val * length) - pixels[index - 2];\n        }\n      } else {\n        if (index < 2) {\n          pixel = val;\n        } else {\n          pixel = length - pixels[index - 2] - val;\n        }\n      }\n\n      pixels.push(pixel);\n    });\n\n    return {\n      x: pixels[0] * scale,\n      y: pixels[1] * scale,\n      width: pixels[2] * scale,\n      height: pixels[3] * scale,\n    };\n  }\n\n  _updateCoords(src, dst, scaleMode) {\n    const srcRatio = src.width / src.height;\n    const dstRatio = dst.width / dst.height;\n\n    if (scaleMode && scaleMode === 'fill') {\n      if (srcRatio < dstRatio) {\n        const newHeight = dst.height * (src.width / dst.width);\n        src.y = src.y + ((src.height - newHeight) * 0.5);\n        src.height = newHeight;\n      }\n      if (srcRatio > dstRatio) {\n        const newWidth = dst.width * (src.height / dst.height);\n        src.x = src.x + ((src.width - newWidth) * 0.5);\n        src.width = newWidth;\n      }\n    } else {\n      if (srcRatio > dstRatio) {\n        const newHeight = dst.width * (src.height / src.width);\n        dst.y = dst.y + ((dst.height - newHeight) * 0.5);\n        dst.height = newHeight;\n      }\n      if (srcRatio < dstRatio) {\n        const newWidth = dst.height * srcRatio;\n        dst.x = dst.x + ((dst.width - newWidth) * 0.5);\n        dst.width = newWidth;\n      }\n    }\n\n    // Round properties for pica (and general speed up)\n    const roundProps = ['x', 'y', 'width', 'height'];\n\n    roundProps.forEach(prop => {\n      src[prop] = Math.round(src[prop]);\n      dst[prop] = Math.round(dst[prop]);\n    });\n\n    return {\n      src,\n      dst,\n    };\n  }\n\n  _getTile(dst, size) {\n    return {\n      x: dst.x,\n      y: dst.y,\n      width: size[0] <= 1 ? dst.width * size[0] : size[0],\n      height: size[1] <= 1 ? dst.height * size[1] : size[1],\n    };\n  }\n\n  _drawTiles(dst, tile, scaleMode, callback) {\n    let rows;\n    let columns;\n\n    let offsetWidth = 0;\n    let offsetHeight = 0;\n\n    if (scaleMode && scaleMode === 'fill') {\n      rows = Math.ceil(dst.height / tile.height);\n      columns = Math.ceil(dst.width / tile.width);\n\n      offsetWidth = ((tile.width * columns) - dst.width) * 0.5;\n      offsetHeight = ((tile.height * rows) - dst.height) * 0.5;\n\n    } else {\n      rows = Math.floor(dst.height / tile.height);\n      columns = Math.floor(dst.width / tile.width);\n    }\n\n    let row = 0;\n    let column = 0;\n\n    const totalTiles = rows * columns;\n\n    for (let i = 0; i < totalTiles; i++) {\n      callback({\n        x: tile.x + (column * tile.width) - offsetWidth,\n        y: tile.y + (row * tile.height) - offsetHeight,\n      });\n\n      if (column === columns - 1) {\n        row++;\n      }\n\n      column = column < columns - 1 ? column + 1 : 0;\n    }\n  }\n\n  _getImageData(image, x, y, width, height) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = image.naturalWidth;\n    tempCanvas.height = image.naturalHeight;\n    const tempContext = tempCanvas.getContext('2d');\n    tempContext.drawImage(image, 0, 0, image.naturalWidth, image.naturalHeight);\n    return tempContext.getImageData(x, y, width, height).data;\n  }\n\n  _getImage(imageUrl, callback) {\n    if (this._imageMap[imageUrl]) {\n      callback(this._imageMap[imageUrl]);\n      return;\n    }\n\n    const image = new Image();\n    image.crossOrigin = 'Anonymous';\n    image.src = imageUrl;\n    image.onload = event => {\n      this._imageMap[imageUrl] = image;\n      callback(image);\n    };\n  }\n\n  _resizeImage(image, src, dst, callback) {\n    const resizedImageKey = JSON.stringify({\n      src: image.src,\n      dst,\n    });\n\n    if (this._slideContentMap[resizedImageKey]) {\n      callback(this._slideContentMap[resizedImageKey]);\n      return;\n    }\n\n    pica.resizeBuffer({\n      src: this._getImageData(image, src.x, src.y, src.width, src.height),\n      width: src.width,\n      height: src.height,\n      toWidth: dst.width,\n      toHeight: dst.height,\n      quality: 1,\n      alpha: false,\n      unsharpAmount: 0,\n      unsharpRadius: 0.5,\n      unsharpThreshold: 0,\n    }, (error, buffer) => {\n      const resizedImageData = new ImageData(new Uint8ClampedArray(buffer), dst.width, dst.height);\n\n      this._slideContentMap[resizedImageKey] = resizedImageData;\n\n      callback(this._slideContentMap[resizedImageKey]);\n    });\n  }\n\n  _drawImage(context, object, callback) {\n    this._getImage(object.url, image => {\n      let src = {\n        x: 0,\n        y: 0,\n        width: image.naturalWidth,\n        height: image.naturalHeight,\n      };\n\n      let dst = this._position2Pixels(object.position, this._scale);\n\n      if (object.tile) {\n        let tile = this._getTile(dst, object.tile.size);\n\n        const updatedCoords = this._updateCoords(src, tile, object.tile.scaleMode);\n\n        this._resizeImage(image, updatedCoords.src, updatedCoords.dst, resizedImageData => {\n\n          this._drawTiles(dst, updatedCoords.dst, object.scaleMode, tileCoord => {\n            context.putImageData(resizedImageData, tileCoord.x, tileCoord.y);\n          });\n\n          callback();\n        });\n\n        return;\n      }\n\n      const updatedCoords = this._updateCoords(src, dst, object.scaleMode);\n\n      src = updatedCoords.src;\n      dst = updatedCoords.dst;\n\n      this._resizeImage(image, src, dst, resizedImageData => {\n        context.putImageData(resizedImageData, dst.x, dst.y);\n\n        callback();\n      });\n    });\n  }\n\n  _getVideoData(video) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = video.videoWidth;\n    tempCanvas.height = video.videoHeight;\n    const tempContext = tempCanvas.getContext('2d');\n    tempContext.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n    return tempContext._getImageData(0, 0, video.videoWidth, video.videoHeight).data;\n  }\n\n  _getVideo(object, callback = () => {}) {\n    const videoKey = JSON.stringify(object.sources);\n\n    if (this._videoMap[videoKey]) {\n      callback(this._videoMap[videoKey]);\n\n      return this._videoMap[videoKey];\n    }\n\n    const video = document.createElement('video');\n    video.style.display = 'none';\n    video.crossOrigin = 'anonymous';\n    video.muted = true;\n    this.container.appendChild(video);\n\n    object.sources.forEach(source => {\n      const _source = document.createElement('source');\n      _source.src = source.url;\n      _source.type = source.type;\n      video.appendChild(_source);\n    });\n\n    this._videoMap[videoKey] = video;\n\n    video.addEventListener('loadedmetadata', () => {\n      callback(video);\n    });\n\n    video._playCount = 0;\n\n    video.addEventListener('ended', () => {\n      video.play();\n\n      video._playCount += 1;\n\n      this._videoEnded(video, object);\n    });\n\n    return video;\n  }\n\n  _drawVideo(context, object, callback) {\n    this._getVideo(object, video => {\n      if (video.videoWidth === 0 || video.videoHeight === 0) {\n        return;\n      }\n\n      let src = {\n        x: 0,\n        y: 0,\n        width: video.videoWidth,\n        height: video.videoHeight,\n      };\n\n      let dst = this._position2Pixels(object.position, this._scale);\n\n      if (object.tile) {\n        let tile = this._getTile(dst, object.tile.size);\n\n        const updatedCoords = this._updateCoords(src, tile, object.tile.scaleMode);\n\n        this._drawTiles(dst, updatedCoords.dst, object.scaleMode, tileCoord => {\n          context.drawImage(video, src.x, src.y, src.width, src.height, tileCoord.x, tileCoord.y, tile.width, tile.height);\n        });\n\n        callback();\n\n        return;\n      }\n\n      const updatedCoords = this._updateCoords(src, dst, object.scaleMode);\n\n      src = updatedCoords.src;\n      dst = updatedCoords.dst;\n\n      context.drawImage(video, src.x, src.y, src.width, src.height, dst.x, dst.y, dst.width, dst.height);\n\n      callback();\n    });\n  }\n\n  _playSlideContent(index) {\n    this._slides[index].content.forEach(object => {\n      if (object.type === 'video') {\n        this._getVideo(object, video => {\n          video._playCount = 0;\n          video.currentTime = 0;\n          video.play();\n        });\n      }\n    });\n  }\n\n  _pauseSlideContent() {\n    const currentSlideVideos = [];\n\n    this._slides[this._currentSlideIndex].content.forEach(object => {\n      if (object.type === 'video') {\n        currentSlideVideos.push(this._getVideo(object));\n      }\n    });\n\n    this._slides.forEach((slide, index) => {\n      if (index === this._currentSlideIndex) {\n        return;\n      }\n\n      slide.content.forEach(object => {\n        if (object.type === 'video') {\n          this._getVideo(object, video => {\n            if (currentSlideVideos.indexOf(video) === -1) {\n              video._playCount = 0;\n              video.currentTime = 0;\n              video.pause();\n            }\n          });\n        }\n      });\n    });\n  }\n}\n\nexport default Showy;\n","const transitions = {\n  wipeUp: {\n    glsl: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      void main() {\n        vec2 p = gl_FragCoord.xy / resolution.xy;\n        vec4 a = texture2D(from, p);\n        vec4 b = texture2D(to, p);\n        gl_FragColor = mix(a, b, step(0.0 + p.y, progress));\n      }\n    `,\n    uniforms: {},\n  },\n  wipeDown: {\n    glsl: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      void main() {\n        vec2 p = gl_FragCoord.xy / resolution.xy;\n        vec4 a = texture2D(from, p);\n        vec4 b = texture2D(to, p);\n        gl_FragColor = mix(a, b, step(1.0 - p.y, progress));\n      }\n    `,\n    uniforms: {},\n  },\n  wipeRight: {\n    glsl: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      void main() {\n        vec2 p = gl_FragCoord.xy / resolution.xy;\n        vec4 a = texture2D(from, p);\n        vec4 b = texture2D(to, p);\n        gl_FragColor = mix(a, b, step(0.0 + p.x, progress));\n      }\n    `,\n    uniforms: {},\n  },\n  wipeLeft: {\n    glsl: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      void main() {\n        vec2 p = gl_FragCoord.xy / resolution.xy;\n        vec4 a = texture2D(from, p);\n        vec4 b = texture2D(to, p);\n        gl_FragColor = mix(a, b, step(1.0 - p.x, progress));\n      }\n    `,\n    uniforms: {},\n  },\n  circle: {\n    glsl: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      uniform float centerX;\n      uniform float centerY;\n      uniform float smoothness;\n      uniform bool grow;\n\n      vec2 center = vec2(centerX, 1.0 - centerY);\n      float scale = sqrt(min(resolution[0] / resolution[1], resolution[1] / resolution[0]) / max(centerX, 1.0 - centerY));\n\n      void main() {\n        vec2 p = gl_FragCoord.xy / resolution.xy;\n        float size = grow ? progress : 1.0 - progress;\n        float dist = distance(center, p);\n        float circle = smoothstep(-smoothness, 0.0, scale * dist - size * (1.0 + smoothness));\n        gl_FragColor = mix(texture2D(from, p), texture2D(to, p), grow ? 1.0 - circle : circle);\n      }\n    `,\n    uniforms: {\n      centerX: 0.5,\n      centerY: 0.5,\n      smoothness: 0,\n      grow: true,\n    },\n  },\n  circleInOut: {\n    glsl: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      float maxRadius = resolution.x + resolution.y;\n\n      void main() {\n        vec2 p = gl_FragCoord.xy / resolution.xy;\n\n        float distX = gl_FragCoord.x - resolution.x / 2.0;\n        float distY = gl_FragCoord.y - resolution.y / 2.0;\n        float dist = sqrt(distX * distX + distY * distY);\n\n        float step = 2.0 * abs(progress - 0.5);\n        step = step * step * step;\n\n        if (dist < step * maxRadius)\n        {\n          if (progress < 0.5)\n            gl_FragColor = texture2D(from, p);\n          else\n            gl_FragColor = texture2D(to, p);\n        }\n        else\n          gl_FragColor = vec4(0.0, 0.0, 0.0, 1.0);\n      }\n    `,\n    uniforms: {},\n  },\n  splitVertical: {\n    glsl: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n\n      // General parameters\n      uniform sampler2D from;\n      uniform sampler2D to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      uniform float reflection;\n      uniform float perspective;\n      uniform float depth;\n\n      const vec4 black = vec4(0.0, 0.0, 0.0, 1.0);\n      const vec2 boundMin = vec2(0.0, 0.0);\n      const vec2 boundMax = vec2(1.0, 1.0);\n\n      bool inBounds (vec2 p) {\n        return all(lessThan(boundMin, p)) && all(lessThan(p, boundMax));\n      }\n\n      vec2 project (vec2 p) {\n        return p * vec2(1.0, -1.2) + vec2(0.0, -0.02);\n      }\n\n      vec4 bgColor (vec2 p, vec2 pto) {\n        vec4 c = black;\n        pto = project(pto);\n        if (inBounds(pto)) {\n          c += mix(black, texture2D(to, pto), reflection * mix(1.0, 0.0, pto.y));\n        }\n        return c;\n      }\n\n      void main() {\n        vec2 p = gl_FragCoord.xy / resolution.xy;\n\n        vec2 pfr = vec2(-1.), pto = vec2(-1.);\n\n        float middleSlit = 2.0 * abs(p.x-0.5) - progress;\n        if (middleSlit > 0.0) {\n          pfr = p + (p.x > 0.5 ? -1.0 : 1.0) * vec2(0.5*progress, 0.0);\n          float d = 1.0/(1.0+perspective*progress*(1.0-middleSlit));\n          pfr.y -= d/2.;\n          pfr.y *= d;\n          pfr.y += d/2.;\n        }\n\n        float size = mix(1.0, depth, 1.-progress);\n        pto = (p + vec2(-0.5, -0.5)) * vec2(size, size) + vec2(0.5, 0.5);\n\n        if (inBounds(pfr)) {\n          gl_FragColor = texture2D(from, pfr);\n        }\n        else if (inBounds(pto)) {\n          gl_FragColor = texture2D(to, pto);\n        }\n        else {\n          gl_FragColor = bgColor(p, pto);\n        }\n      }\n    `,\n    uniforms: {\n      reflection: 0,\n      perspective: 0,\n      depth: 1,\n    },\n  },\n  slideUp: {\n    glsl: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      uniform float translateX;\n      uniform float translateY;\n\n      void main() {\n          vec2 texCoord = gl_FragCoord.xy / resolution.xy;\n          float x = progress * translateX;\n          float y = progress * translateY;\n\n          if (x >= 0.0 && y >= 0.0) {\n              if (texCoord.x >= x && texCoord.y >= y) {\n                  gl_FragColor = texture2D(from, texCoord - vec2(x, y));\n              }\n              else {\n                  vec2 uv;\n                  if (x > 0.0)\n                      uv = vec2(x - 1.0, y);\n                  else if (y > 0.0)\n                      uv = vec2(x, y - 1.0);\n                  gl_FragColor = texture2D(to, texCoord - uv);\n              }\n          }\n          else if (x <= 0.0 && y <= 0.0) {\n              if (texCoord.x <= (1.0 + x) && texCoord.y <= (1.0 + y))\n                  gl_FragColor = texture2D(from, texCoord - vec2(x, y));\n              else {\n                  vec2 uv;\n                  if (x < 0.0)\n                      uv = vec2(x + 1.0, y);\n                  else if (y < 0.0)\n                      uv = vec2(x, y + 1.0);\n                  gl_FragColor = texture2D(to, texCoord - uv);\n              }\n          }\n          else\n              gl_FragColor = vec4(0.0);\n      }\n    `,\n    uniforms: {\n      translateX: 0,\n      translateY: 1,\n    },\n  },\n  slideDown: {\n    glsl: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      uniform float translateX;\n      uniform float translateY;\n\n      void main() {\n          vec2 texCoord = gl_FragCoord.xy / resolution.xy;\n          float x = progress * translateX;\n          float y = progress * translateY;\n\n          if (x >= 0.0 && y >= 0.0) {\n              if (texCoord.x >= x && texCoord.y >= y) {\n                  gl_FragColor = texture2D(from, texCoord - vec2(x, y));\n              }\n              else {\n                  vec2 uv;\n                  if (x > 0.0)\n                      uv = vec2(x - 1.0, y);\n                  else if (y > 0.0)\n                      uv = vec2(x, y - 1.0);\n                  gl_FragColor = texture2D(to, texCoord - uv);\n              }\n          }\n          else if (x <= 0.0 && y <= 0.0) {\n              if (texCoord.x <= (1.0 + x) && texCoord.y <= (1.0 + y))\n                  gl_FragColor = texture2D(from, texCoord - vec2(x, y));\n              else {\n                  vec2 uv;\n                  if (x < 0.0)\n                      uv = vec2(x + 1.0, y);\n                  else if (y < 0.0)\n                      uv = vec2(x, y + 1.0);\n                  gl_FragColor = texture2D(to, texCoord - uv);\n              }\n          }\n          else\n              gl_FragColor = vec4(0.0);\n      }\n    `,\n    uniforms: {\n      translateX: 0,\n      translateY: -1,\n    },\n  },\n  slideLeft: {\n    glsl: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      uniform float translateX;\n      uniform float translateY;\n\n      void main() {\n          vec2 texCoord = gl_FragCoord.xy / resolution.xy;\n          float x = progress * translateX;\n          float y = progress * translateY;\n\n          if (x >= 0.0 && y >= 0.0) {\n              if (texCoord.x >= x && texCoord.y >= y) {\n                  gl_FragColor = texture2D(from, texCoord - vec2(x, y));\n              }\n              else {\n                  vec2 uv;\n                  if (x > 0.0)\n                      uv = vec2(x - 1.0, y);\n                  else if (y > 0.0)\n                      uv = vec2(x, y - 1.0);\n                  gl_FragColor = texture2D(to, texCoord - uv);\n              }\n          }\n          else if (x <= 0.0 && y <= 0.0) {\n              if (texCoord.x <= (1.0 + x) && texCoord.y <= (1.0 + y))\n                  gl_FragColor = texture2D(from, texCoord - vec2(x, y));\n              else {\n                  vec2 uv;\n                  if (x < 0.0)\n                      uv = vec2(x + 1.0, y);\n                  else if (y < 0.0)\n                      uv = vec2(x, y + 1.0);\n                  gl_FragColor = texture2D(to, texCoord - uv);\n              }\n          }\n          else\n              gl_FragColor = vec4(0.0);\n      }\n    `,\n    uniforms: {\n      translateX: 1,\n      translateY: 0,\n    },\n  },\n  slideRight: {\n    glsl: `\n      #ifdef GL_ES\n      precision highp float;\n      #endif\n      uniform sampler2D from, to;\n      uniform float progress;\n      uniform vec2 resolution;\n\n      uniform float translateX;\n      uniform float translateY;\n\n      void main() {\n          vec2 texCoord = gl_FragCoord.xy / resolution.xy;\n          float x = progress * translateX;\n          float y = progress * translateY;\n\n          if (x >= 0.0 && y >= 0.0) {\n              if (texCoord.x >= x && texCoord.y >= y) {\n                  gl_FragColor = texture2D(from, texCoord - vec2(x, y));\n              }\n              else {\n                  vec2 uv;\n                  if (x > 0.0)\n                      uv = vec2(x - 1.0, y);\n                  else if (y > 0.0)\n                      uv = vec2(x, y - 1.0);\n                  gl_FragColor = texture2D(to, texCoord - uv);\n              }\n          }\n          else if (x <= 0.0 && y <= 0.0) {\n              if (texCoord.x <= (1.0 + x) && texCoord.y <= (1.0 + y))\n                  gl_FragColor = texture2D(from, texCoord - vec2(x, y));\n              else {\n                  vec2 uv;\n                  if (x < 0.0)\n                      uv = vec2(x + 1.0, y);\n                  else if (y < 0.0)\n                      uv = vec2(x, y + 1.0);\n                  gl_FragColor = texture2D(to, texCoord - uv);\n              }\n          }\n          else\n              gl_FragColor = vec4(0.0);\n      }\n    `,\n    uniforms: {\n      translateX: -1,\n      translateY: 0,\n    },\n  },\n};\n\nexport default transitions;\n"]}