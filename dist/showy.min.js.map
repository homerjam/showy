{"version":3,"file":"generated.js","sources":["node_modules/browser-pack/_prelude.js","showy.browserify.js","src/showy.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length",1,"window","Showy","TRANSITION_FORWARDS","TRANSITION_BACKWARDS","config","_classCallCheck","this","defaultConfig","container","slides","glslTransitions","transition","name","duration","ease","priority","_","merge","document","querySelector","_slides","_currentSlideIndex","_transitionToIndex","_transitionProgress","_imageMap","_videoMap","_slideContentMap","_createCanvases","_getTransition","addEventListener","resize","bind","_lastFrameTime","requestAnimationFrame","_animate","_transitionDirection","frameTime","_fps","_drawSlides","error","console","stack","canvas","createElement","style","position","width","height","_resizeCanvas","_currentCanvas","_createCanvas","_currentContext","getContext","_nextCanvas","_nextContext","_prevCanvas","_prevContext","_renderCanvas","_renderContext","pixelStorei","UNPACK_FLIP_Y_WEBGL","appendChild","_scale","devicePixelRatio","clientWidth","clientHeight","context","clearRect","currentSlideTransition","arguments","undefined","nextPrevSlideTransition","_currentSlideTransition","_nextPrevSlideTransition","glsl","reset","currentSlide","nextSlide","prevSlide","_rendered","_hasVideo","_transitionInProgress","_drawSlide","_fromTexture","dispose","_toTexture","createTexture","transitionNext","transitionPrev","progressIncrement","_transition","createTransition","easedTransitionProgress","eases","render","uniforms","_ready","_clearContext","slide","content","filter","object","type","_drawSlideContent","index","callback","_drawImage","_drawVideo","_this","scale","pixels","forEach","val","pixel","push","x","y","src","dst","scaleMode","srcRatio","dstRatio","newHeight","newWidth","_newHeight","_newWidth","roundProps","prop","Math","round","size","tile","rows","columns","offsetWidth","offsetHeight","ceil","floor","row","column","totalTiles","image","tempCanvas","naturalWidth","naturalHeight","tempContext","drawImage","getImageData","data","imageUrl","_this2","Image","crossOrigin","onload","_this3","resizedImageKey","JSON","stringify","pica","resizeBuffer","_getImageData","toWidth","toHeight","quality","alpha","unsharpAmount","unsharpRadius","unsharpThreshold","buffer","resizedImageData","ImageData","Uint8ClampedArray","_this4","_getImage","url","_position2Pixels","_ret","_getTile","updatedCoords","_updateCoords","_resizeImage","_drawTiles","tileCoord","putImageData","v","_typeof","video","videoWidth","videoHeight","sources","videoKey","display","autoplay","loop","muted","source","_source","_this5","_getVideo","_ret2"],"mappings":"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","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","window.Showy = require('./src/showy').default;\n","/**\n * TODO\n * - cache video frames (assume frame rate and round currentTime to get frame)\n * - fallback for no-video / autoplay on mobile\n * - effects/filters (sepia / grayscale etc)\n * - fallback for no-webgl (use gsap?)\n */\n\nconst TRANSITION_FORWARDS = 'forwards';\nconst TRANSITION_BACKWARDS = 'backwards';\n\nclass Showy {\n  constructor(config) {\n    const defaultConfig = {\n      container: 'body',\n      slides: [],\n      glslTransitions: {},\n      transition: {\n        name: 'slide',\n        duration: 2000,\n        ease: 'linear',\n        priority: 0,\n      },\n    };\n\n    this.config = _.merge({}, defaultConfig, config);\n\n    if (typeof this.config.container === 'string') {\n      this.container = document.querySelector(this.config.container);\n    } else {\n      this.container = this.config.container;\n    }\n\n    this._slides = this.config.slides;\n    this._currentSlideIndex = this._transitionToIndex = 0;\n    this._transitionProgress = 0;\n    this._imageMap = {};\n    this._videoMap = {};\n    this._slideContentMap = {};\n\n    this._createCanvases();\n\n    this.transition = this._getTransition();\n\n    window.addEventListener('resize', this.resize.bind(this));\n\n    this._lastFrameTime = 0;\n    window.requestAnimationFrame(this._animate.bind(this));\n  }\n\n  nextSlide() {\n    this._transitionDirection = TRANSITION_FORWARDS;\n\n    if (this._transitionToIndex === this._currentSlideIndex - 1 || (this._transitionToIndex === this._slides.length - 1 && this._currentSlideIndex === 0)) {\n      // Cancel and reverse the transition\n      this._transitionToIndex = this._currentSlideIndex;\n\n    } else {\n      this._transitionToIndex = this._currentSlideIndex === this._slides.length - 1 ? 0 : this._currentSlideIndex + 1;\n    }\n  }\n\n  prevSlide() {\n    this._transitionDirection = TRANSITION_BACKWARDS;\n\n    if (this._transitionToIndex === this._currentSlideIndex + 1 || (this._transitionToIndex === 0 && this._currentSlideIndex === this._slides.length - 1)) {\n      // Cancel and reverse the transition\n      this._transitionToIndex = this._currentSlideIndex;\n\n    } else {\n      this._transitionToIndex = this._currentSlideIndex === 0 ? this._slides.length - 1 : this._currentSlideIndex - 1;\n    }\n  }\n\n  _animate(frameTime) {\n    this._fps = 1000 / (frameTime - this._lastFrameTime);\n\n    try {\n      this._drawSlides();\n\n      window.requestAnimationFrame(this._animate.bind(this));\n\n    } catch (error) {\n      console.error(error.stack);\n    }\n\n    this._lastFrameTime = frameTime;\n  }\n\n  _createCanvas() {\n    const canvas = document.createElement('canvas');\n    canvas.style.position = 'absolute';\n    canvas.style.width = '100%';\n    canvas.style.height = '100%';\n    this._resizeCanvas(canvas);\n    return canvas;\n  }\n\n  _createCanvases() {\n    this._currentCanvas = this._createCanvas();\n    this._currentContext = this._currentCanvas.getContext('2d');\n\n    this._nextCanvas = this._createCanvas();\n    this._nextContext = this._nextCanvas.getContext('2d');\n\n    this._prevCanvas = this._createCanvas();\n    this._prevContext = this._prevCanvas.getContext('2d');\n\n    this._renderCanvas = this._createCanvas();\n    this._renderContext = this._renderCanvas.getContext('webgl') || this._renderCanvas.getContext('experimental-webgl');\n    this._renderContext.pixelStorei(this._renderContext.UNPACK_FLIP_Y_WEBGL, true);\n\n    this.container.appendChild(this._renderCanvas);\n  }\n\n  _resizeCanvas(canvas) {\n    this._scale = window.devicePixelRatio;\n    canvas.width = this.container.clientWidth * this._scale;\n    canvas.height = this.container.clientHeight * this._scale;\n  }\n\n  resize() {\n    // Remove all cached imageData as this will be redundant now\n    this._slideContentMap = {};\n\n    this._resizeCanvas(this._currentCanvas);\n    this._resizeCanvas(this._nextCanvas);\n    this._resizeCanvas(this._prevCanvas);\n    this._resizeCanvas(this._renderCanvas);\n\n    this._drawSlides(true);\n  }\n\n  _clearContext(context) {\n    context.clearRect(0, 0, context.canvas.width, context.canvas.height);\n  }\n\n  _transitionInProgress() {\n    return this._transitionProgress > 0 && this._transitionProgress < 1;\n  }\n\n  _getTransition(currentSlideTransition = {} , nextPrevSlideTransition = {}) {\n    const _currentSlideTransition = _.merge({}, this.config.transition, currentSlideTransition || {});\n    const _nextPrevSlideTransition = _.merge({}, this.config.transition, nextPrevSlideTransition || {});\n    _currentSlideTransition.glsl = this.config.glslTransitions[_currentSlideTransition.name];\n    _nextPrevSlideTransition.glsl = this.config.glslTransitions[_nextPrevSlideTransition.name];\n    return _currentSlideTransition.priority >= _nextPrevSlideTransition.priority ? _currentSlideTransition : _nextPrevSlideTransition;\n  }\n\n  _drawSlides(reset) {\n    const currentSlide = this._slides[this._currentSlideIndex];\n    const nextSlide = this._slides[this._currentSlideIndex === this._slides.length - 1 ? 0 : this._currentSlideIndex + 1];\n    const prevSlide = this._slides[this._currentSlideIndex === 0 ? this._slides.length - 1 : this._currentSlideIndex - 1];\n\n    let transition;\n\n    // Rerender the current slide eg. if canvas has been resized\n    if (reset) {\n      currentSlide._rendered = false;\n    }\n\n    // Only render if we need to ie. only during transitions\n    // or if the current slide contains video(s)\n    if (!currentSlide._hasVideo &&\n      currentSlide._rendered &&\n      !this._transitionInProgress() &&\n      this._currentSlideIndex === this._transitionToIndex) {\n      return;\n    }\n\n    this._drawSlide(this._currentContext, currentSlide);\n    this._drawSlide(this._nextContext, nextSlide);\n    this._drawSlide(this._prevContext, prevSlide);\n\n    if (this._fromTexture) {\n      this._fromTexture.dispose();\n    }\n\n    if (this._toTexture) {\n      this._toTexture.dispose();\n    }\n\n    // Transition is already running or has been triggered by a change of _transitionToIndex\n    if (this._transitionToIndex !== this._currentSlideIndex || this._transitionInProgress()) {\n      // We're heading to the next slide (or the transition has been cancelled halfway through)\n      if ((this._transitionToIndex !== this._currentSlideIndex && this._transitionDirection === TRANSITION_FORWARDS) ||\n        (this._transitionToIndex === this._currentSlideIndex && this._transitionDirection === TRANSITION_BACKWARDS)) {\n        this._fromTexture = createTexture(this._renderContext, this._currentCanvas);\n        this._toTexture = createTexture(this._renderContext, this._nextCanvas);\n        transition = this._getTransition(currentSlide.transitionNext, nextSlide.transitionPrev);\n      }\n      // We're heading to the previous slide (or the transition has been cancelled halfway through)\n      if ((this._transitionToIndex !== this._currentSlideIndex && this._transitionDirection === TRANSITION_BACKWARDS) ||\n        (this._transitionToIndex === this._currentSlideIndex && this._transitionDirection === TRANSITION_FORWARDS)) {\n        this._fromTexture = createTexture(this._renderContext, this._prevCanvas);\n        this._toTexture = createTexture(this._renderContext, this._currentCanvas);\n        transition = this._getTransition(currentSlide.transitionPrev, prevSlide.transitionNext);\n      }\n\n      // console.log(this._fps);\n      const progressIncrement = 60 / transition.duration;\n\n      // Increment the transition progress depending on the direction\n      if (this._transitionDirection === TRANSITION_FORWARDS) {\n        this._transitionProgress = this._transitionInProgress() ? this._transitionProgress + progressIncrement : progressIncrement;\n      }\n      if (this._transitionDirection === TRANSITION_BACKWARDS) {\n        this._transitionProgress = this._transitionInProgress() ? this._transitionProgress - progressIncrement : 1 - progressIncrement;\n      }\n\n      // We've reached the end of the transition\n      if (this._transitionProgress > 1) {\n        this._transitionProgress = 1;\n      }\n      if (this._transitionProgress < 0) {\n        this._transitionProgress = 0;\n      }\n\n    } else {\n      // We're not transitioning so just rerender current slide (only if needed)\n      this._fromTexture = createTexture(this._renderContext, this._currentCanvas);\n      this._toTexture = this._fromTexture;\n    }\n\n    if (transition && this.transition.name !== transition.name) {\n      this.transition = transition;\n      if (this._transition) {\n        this._transition.dispose();\n        this._transition = null;\n      }\n    }\n\n    if (!this._transition) {\n      this._transition = createTransition(this._renderContext, this.transition.glsl.glsl);\n    }\n\n    const easedTransitionProgress = eases[this.transition.ease](this._transitionProgress);\n\n    this._transition.render(easedTransitionProgress, this._fromTexture, this._toTexture, this.transition.glsl.uniforms);\n\n    // We have rendered the current slide for the first time\n    if (currentSlide._ready) {\n      currentSlide._rendered = true;\n    }\n\n    // Transition is finished\n    if (this._transitionToIndex !== this._currentSlideIndex && !this._transitionInProgress()) {\n      this._currentSlideIndex = this._transitionToIndex;\n\n      this._clearContext(this._currentContext);\n      this._clearContext(this._nextContext);\n      this._clearContext(this._prevContext);\n    }\n  }\n\n  _drawSlide(context, slide) {\n    slide._hasVideo = slide.content.filter(object => object.type === 'video').length > 0;\n    slide._rendered = false;\n    slide._ready = false;\n\n    if (slide.content.length) {\n      this._drawSlideContent(context, slide, 0);\n    }\n  }\n\n  _drawSlideContent(context, slide, index) {\n    const object = slide.content[index];\n\n    if (!object) {\n      slide._ready = true;\n      return;\n    }\n\n    const callback = this._drawSlideContent.bind(this, context, slide, index + 1);\n\n    switch (object.type) {\n      case 'image':\n        this._drawImage(context, object, callback);\n        break;\n      case 'video':\n        this._drawVideo(context, object, callback);\n        break;\n      default:\n        throw new Error('Unknown content type');\n    }\n  }\n\n  _position2Pixels(position, scale = 1) {\n    const pixels = [];\n\n    position.forEach((val, index) => {\n      let pixel;\n\n      let length = [this._currentCanvas.width, this._currentCanvas.height, this._currentCanvas.width, this._currentCanvas.height][index];\n\n      length /= scale;\n\n      if (val <= 1) {\n        if (index < 2) {\n          pixel = val * length;\n        } else {\n          pixel = (val * length) - pixels[index - 2];\n        }\n      } else {\n        if (index < 2) {\n          pixel = val;\n        } else {\n          pixel = length - pixels[index - 2] - val;\n        }\n      }\n\n      pixels.push(pixel);\n    });\n\n    return {\n      x: pixels[0] * scale,\n      y: pixels[1] * scale,\n      width: pixels[2] * scale,\n      height: pixels[3] * scale,\n    };\n  }\n\n  _updateCoords(src, dst, scaleMode) {\n    const srcRatio = src.width / src.height;\n    const dstRatio = dst.width / dst.height;\n\n    if (scaleMode && scaleMode === 'fill') {\n      if (srcRatio < dstRatio) {\n        const newHeight = dst.height * (src.width / dst.width);\n        src.y = src.y + ((src.height - newHeight) * 0.5);\n        src.height = newHeight;\n      }\n      if (srcRatio > dstRatio) {\n        const newWidth = dst.width * (src.height / dst.height);\n        src.x = src.x + ((src.width - newWidth) * 0.5);\n        src.width = newWidth;\n      }\n    } else {\n      if (srcRatio > dstRatio) {\n        const newHeight = dst.width * (src.height / src.width);\n        dst.y = dst.y + ((dst.height - newHeight) * 0.5);\n        dst.height = newHeight;\n      }\n      if (srcRatio < dstRatio) {\n        const newWidth = dst.height * srcRatio;\n        dst.x = dst.x + ((dst.width - newWidth) * 0.5);\n        dst.width = newWidth;\n      }\n    }\n\n    // Round properties for pica (and general speed up)\n    const roundProps = ['x', 'y', 'width', 'height'];\n\n    roundProps.forEach(prop => {\n      src[prop] = Math.round(src[prop]);\n      dst[prop] = Math.round(dst[prop]);\n    });\n\n    return {\n      src,\n      dst,\n    };\n  }\n\n  _getTile(dst, size) {\n    return {\n      x: dst.x,\n      y: dst.y,\n      width: size[0] <= 1 ? dst.width * size[0] : size[0],\n      height: size[1] <= 1 ? dst.height * size[1] : size[1],\n    };\n  }\n\n  _drawTiles(dst, tile, scaleMode, callback) {\n    let rows;\n    let columns;\n\n    let offsetWidth = 0;\n    let offsetHeight = 0;\n\n    if (scaleMode && scaleMode === 'fill') {\n      rows = Math.ceil(dst.height / tile.height);\n      columns = Math.ceil(dst.width / tile.width);\n\n      offsetWidth = ((tile.width * columns) - dst.width) * 0.5;\n      offsetHeight = ((tile.height * rows) - dst.height) * 0.5;\n\n    } else {\n      rows = Math.floor(dst.height / tile.height);\n      columns = Math.floor(dst.width / tile.width);\n    }\n\n    let row = 0;\n    let column = 0;\n\n    const totalTiles = rows * columns;\n\n    for (let i = 0; i < totalTiles; i++) {\n      callback({\n        x: tile.x + (column * tile.width) - offsetWidth,\n        y: tile.y + (row * tile.height) - offsetHeight,\n      });\n\n      if (column === columns - 1) {\n        row++;\n      }\n\n      column = column < columns - 1 ? column + 1 : 0;\n    }\n  }\n\n  _getImageData(image, x, y, width, height) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = image.naturalWidth;\n    tempCanvas.height = image.naturalHeight;\n    const tempContext = tempCanvas.getContext('2d');\n    tempContext.drawImage(image, 0, 0, image.naturalWidth, image.naturalHeight);\n    return tempContext.getImageData(x, y, width, height).data;\n  }\n\n  _getImage(imageUrl, callback) {\n    if (this._imageMap[imageUrl]) {\n      callback(this._imageMap[imageUrl]);\n      return;\n    }\n\n    const image = new Image();\n    image.crossOrigin = 'Anonymous';\n    image.src = imageUrl;\n    image.onload = event => {\n      this._imageMap[imageUrl] = image;\n      callback(image);\n    };\n  }\n\n  _resizeImage(image, src, dst, callback) {\n    const resizedImageKey = JSON.stringify(dst);\n\n    if (this._slideContentMap[resizedImageKey]) {\n      callback(this._slideContentMap[resizedImageKey]);\n      return;\n    }\n\n    pica.resizeBuffer({\n      src: this._getImageData(image, src.x, src.y, src.width, src.height),\n      width: src.width,\n      height: src.height,\n      toWidth: dst.width,\n      toHeight: dst.height,\n      quality: 1,\n      alpha: false,\n      unsharpAmount: 0,\n      unsharpRadius: 0.5,\n      unsharpThreshold: 0,\n    }, (error, buffer) => {\n      const resizedImageData = new ImageData(new Uint8ClampedArray(buffer), dst.width, dst.height);\n\n      this._slideContentMap[resizedImageKey] = resizedImageData;\n\n      callback(this._slideContentMap[resizedImageKey]);\n    });\n  }\n\n  _drawImage(context, object, callback) {\n    this._getImage(object.url, image => {\n      let src = {\n        x: 0,\n        y: 0,\n        width: image.naturalWidth,\n        height: image.naturalHeight,\n      };\n\n      let dst = this._position2Pixels(object.position, this._scale);\n\n      if (object.tile) {\n        let tile = this._getTile(dst, object.tile.size);\n\n        const updatedCoords = this._updateCoords(src, tile, object.tile.scaleMode);\n\n        this._resizeImage(image, updatedCoords.src, updatedCoords.dst, resizedImageData => {\n\n          this._drawTiles(dst, updatedCoords.dst, object.scaleMode, tileCoord => {\n            context.putImageData(resizedImageData, tileCoord.x, tileCoord.y);\n          });\n\n          callback();\n        });\n\n        return;\n      }\n\n      const updatedCoords = this._updateCoords(src, dst, object.scaleMode);\n\n      src = updatedCoords.src;\n      dst = updatedCoords.dst;\n\n      this._resizeImage(image, src, dst, resizedImageData => {\n        context.putImageData(resizedImageData, dst.x, dst.y);\n\n        callback();\n      });\n    });\n  }\n\n  _getVideoData(video) {\n    const tempCanvas = document.createElement('canvas');\n    tempCanvas.width = video.videoWidth;\n    tempCanvas.height = video.videoHeight;\n    const tempContext = tempCanvas.getContext('2d');\n    tempContext.drawImage(video, 0, 0, video.videoWidth, video.videoHeight);\n    return tempContext._getImageData(0, 0, video.videoWidth, video.videoHeight).data;\n  }\n\n  _getVideo(sources, callback) {\n    const videoKey = JSON.stringify(sources);\n\n    if (this._videoMap[videoKey]) {\n      callback(this._videoMap[videoKey]);\n      return;\n    }\n\n    const video = document.createElement('video');\n    video.style.display = 'none';\n    video.crossOrigin = 'anonymous';\n    video.autoplay = true;\n    video.loop = true;\n    video.muted = true;\n    this.container.appendChild(video);\n\n    sources.forEach(source => {\n      const _source = document.createElement('source');\n      _source.src = source.url;\n      _source.type = source.type;\n      video.appendChild(_source);\n    });\n\n    this._videoMap[videoKey] = video;\n\n    video.addEventListener('play', () => {\n      callback(video);\n    });\n  }\n\n  _drawVideo(context, object, callback) {\n    this._getVideo(object.sources, video => {\n      if (video.videoWidth === 0 || video.videoHeight === 0) {\n        return;\n      }\n\n      let src = {\n        x: 0,\n        y: 0,\n        width: video.videoWidth,\n        height: video.videoHeight,\n      };\n\n      let dst = this._position2Pixels(object.position, this._scale);\n\n      if (object.tile) {\n        let tile = this._getTile(dst, object.tile.size);\n\n        const updatedCoords = this._updateCoords(src, tile, object.tile.scaleMode);\n\n        this._drawTiles(dst, updatedCoords.dst, object.scaleMode, tileCoord => {\n          context.drawImage(video, src.x, src.y, src.width, src.height, tileCoord.x, tileCoord.y, tile.width, tile.height);\n        });\n\n        callback();\n\n        return;\n      }\n\n      const updatedCoords = this._updateCoords(src, dst, object.scaleMode);\n\n      src = updatedCoords.src;\n      dst = updatedCoords.dst;\n\n      context.drawImage(video, src.x, src.y, src.width, src.height, dst.x, dst.y, dst.width, dst.height);\n\n      callback();\n    });\n  }\n}\n\nexport default Showy;\n"]}